
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIGUALDIFERENTEleftMENORQUEMENORIGUALMAYORQUEMAYORIGUALleftSUMARESTAleftMULTIPLICACIONDIVISIONALARM_OFF ALARM_ON AND ASIGNACION BEGIN BOOL CADENA COMA COMILLADOBLE COMILLASIMPLE CORCHETE_A CORCHETE_B DIFERENTE DIVISION ELSE END FALSE FOR FROM FUN ID IF IGUAL IMPORT INT LIGHT_OFF LIGHT_ON LLAVE_A LLAVE_C MASMAS MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOSMENOS MOVE_TO MULTIPLICACION NOT NUMERO OR PARENTESIS_A PARENTESIS_B PUNTO PUNTOCOMA REAL REAL_LIT RESTA RETURN SENSOR_PIR START_RECORD STG STOP STOP_RECORD SUMA TRUE WAIT_MOTION WHILE programa : BEGIN bloque_codigo END  programa : BEGIN bloque_codigo  bloque_codigo : LLAVE_A lista_declaraciones LLAVE_C  bloque_codigo : LLAVE_A lista_declaraciones \n    lista_declaraciones : lista_declaraciones declaracion\n                        | lista_declaraciones si\n                        | lista_declaraciones mientras\n                        | lista_declaraciones for_loop\n                        | declaracion\n                        | si\n                        | mientras\n                        | for_loop\n     declaracion : tipo ID ASIGNACION expresion PUNTOCOMA  declaracion : tipo ID ASIGNACION PUNTOCOMA  declaracion : tipo ID ASIGNACION expresion  tipo : INT\n             | BOOL\n             | STG\n             | REAL \n    expresion : expresion SUMA expresion\n              | expresion RESTA expresion\n              | expresion MULTIPLICACION expresion\n              | expresion DIVISION expresion\n              | expresion MENORQUE expresion\n              | expresion MENORIGUAL expresion\n              | expresion MAYORQUE expresion\n              | expresion MAYORIGUAL expresion\n              | expresion IGUAL expresion\n              | expresion DIFERENTE expresion\n     \n    expresion : PARENTESIS_A expresion PARENTESIS_B\n              | NUMERO\n              | REAL_LIT\n              | CADENA\n              | TRUE\n              | FALSE\n    \n    si : IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo\n       | IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo\n     mientras : WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo  mientras : WHILE expresion  bloque_codigo \n    for_loop : FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo\n    \n    for_init : tipo ID ASIGNACION expresion\n             | ID ASIGNACION expresion\n     for_condicion : expresion \n    for_actualizacion : ID ASIGNACION expresion\n                      | ID MASMAS\n                      | ID MENOSMENOS\n     declaracion : MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA  declaracion : MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA\n                    | MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA  \n     declaracion : WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA  declaracion : WAIT_MOTION PUNTOCOMA  declaracion : WAIT_MOTION PARENTESIS_A PARENTESIS_B \n    declaracion : START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA\n                        | STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA\n    \n    declaracion : START_RECORD PARENTESIS_A PARENTESIS_B\n                        | STOP_RECORD PARENTESIS_A PARENTESIS_B \n    \n    declaracion : START_RECORD PUNTOCOMA\n                | STOP_RECORD PUNTOCOMA\n                | START_RECORD PARENTESIS_A PUNTOCOMA\n                | START_RECORD PARENTESIS_B PUNTOCOMA\n                | STOP_RECORD PARENTESIS_A PUNTOCOMA\n                | STOP_RECORD PARENTESIS_B PUNTOCOMA\n    \n    declaracion : LIGHT_ON PUNTOCOMA\n                        | LIGHT_OFF PUNTOCOMA\n    \n    declaracion : LIGHT_ON\n                | LIGHT_OFF\n    \n    declaracion : ALARM_ON PUNTOCOMA\n                        | ALARM_OFF PUNTOCOMA\n    \n    declaracion : ALARM_ON\n                | ALARM_OFF\n     declaracion : SENSOR_PIR PUNTOCOMA  declaracion : SENSOR_PIR  declaracion : STOP PUNTOCOMA  declaracion : STOP '
    
_lr_action_items = {'BEGIN':([0,],[2,]),'$end':([1,3,5,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[0,-2,-1,-4,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'LLAVE_A':([2,52,53,54,55,56,57,94,95,96,97,98,99,100,101,102,103,104,105,113,123,130,],[4,4,-31,-32,-33,-34,-35,4,4,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,4,4,]),'END':([3,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[5,-4,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'MOVE_TO':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[12,12,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'WAIT_MOTION':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[13,13,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'START_RECORD':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[14,14,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'STOP_RECORD':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[15,15,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'LIGHT_ON':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[16,16,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'LIGHT_OFF':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[17,17,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'ALARM_ON':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[18,18,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'ALARM_OFF':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[19,19,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'SENSOR_PIR':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[20,20,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'STOP':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[21,21,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'IF':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[22,22,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'WHILE':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[23,23,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'FOR':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[24,24,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'INT':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,58,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[25,25,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,25,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'BOOL':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,58,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[26,26,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,26,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'STG':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,58,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[27,27,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,27,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'REAL':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,58,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[28,28,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,28,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'LLAVE_C':([6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[29,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,-36,-38,-48,-49,-47,-37,-40,]),'ELSE':([6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,37,40,43,44,45,46,47,48,49,53,54,55,56,57,62,63,64,65,66,67,68,72,86,87,90,91,92,96,97,98,99,100,101,102,103,104,105,109,113,114,115,121,122,126,127,134,],[-4,-9,-10,-11,-12,-65,-66,-69,-70,-72,-74,-3,-5,-6,-7,-8,-51,-57,-58,-63,-64,-67,-68,-71,-73,-31,-32,-33,-34,-35,-52,-55,-59,-60,-56,-61,-62,-39,-15,-14,-50,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-13,-30,123,-38,-48,-49,-47,-37,-40,]),'ID':([11,25,26,27,28,58,84,124,],[34,-16,-17,-18,-19,85,107,129,]),'PARENTESIS_A':([12,13,14,15,22,23,24,50,51,59,69,73,74,75,76,77,78,79,80,81,82,106,108,118,131,],[35,36,38,41,50,51,58,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'PUNTOCOMA':([13,14,15,16,17,18,19,20,21,38,39,41,42,53,54,55,56,57,59,62,63,66,83,86,96,97,98,99,100,101,102,103,104,105,111,112,113,116,117,119,120,125,],[37,40,43,44,45,46,47,48,49,64,65,67,68,-31,-32,-33,-34,-35,87,90,91,92,106,109,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,121,122,-30,124,-43,-42,126,-41,]),'PARENTESIS_B':([14,15,36,38,41,53,54,55,56,57,70,71,88,89,93,96,97,98,99,100,101,102,103,104,105,110,113,128,132,133,135,],[39,42,62,63,66,-31,-32,-33,-34,-35,94,95,111,112,113,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,120,-30,130,-45,-46,-44,]),'NUMERO':([23,35,50,51,59,61,69,73,74,75,76,77,78,79,80,81,82,88,106,108,118,131,],[53,60,53,53,53,89,53,53,53,53,53,53,53,53,53,53,53,110,53,53,53,53,]),'REAL_LIT':([23,50,51,59,69,73,74,75,76,77,78,79,80,81,82,106,108,118,131,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'CADENA':([23,50,51,59,69,73,74,75,76,77,78,79,80,81,82,106,108,118,131,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'TRUE':([23,50,51,59,69,73,74,75,76,77,78,79,80,81,82,106,108,118,131,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'FALSE':([23,50,51,59,69,73,74,75,76,77,78,79,80,81,82,106,108,118,131,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ASIGNACION':([34,85,107,129,],[59,108,118,131,]),'COMA':([35,60,],[61,88,]),'SUMA':([52,53,54,55,56,57,70,71,86,93,95,96,97,98,99,100,101,102,103,104,105,113,117,119,125,135,],[73,-31,-32,-33,-34,-35,73,73,73,73,-30,-20,-21,-22,-23,73,73,73,73,73,73,-30,73,73,73,73,]),'RESTA':([52,53,54,55,56,57,70,71,86,93,95,96,97,98,99,100,101,102,103,104,105,113,117,119,125,135,],[74,-31,-32,-33,-34,-35,74,74,74,74,-30,-20,-21,-22,-23,74,74,74,74,74,74,-30,74,74,74,74,]),'MULTIPLICACION':([52,53,54,55,56,57,70,71,86,93,95,96,97,98,99,100,101,102,103,104,105,113,117,119,125,135,],[75,-31,-32,-33,-34,-35,75,75,75,75,-30,75,75,-22,-23,75,75,75,75,75,75,-30,75,75,75,75,]),'DIVISION':([52,53,54,55,56,57,70,71,86,93,95,96,97,98,99,100,101,102,103,104,105,113,117,119,125,135,],[76,-31,-32,-33,-34,-35,76,76,76,76,-30,76,76,-22,-23,76,76,76,76,76,76,-30,76,76,76,76,]),'MENORQUE':([52,53,54,55,56,57,70,71,86,93,95,96,97,98,99,100,101,102,103,104,105,113,117,119,125,135,],[77,-31,-32,-33,-34,-35,77,77,77,77,-30,-20,-21,-22,-23,-24,-25,-26,-27,77,77,-30,77,77,77,77,]),'MENORIGUAL':([52,53,54,55,56,57,70,71,86,93,95,96,97,98,99,100,101,102,103,104,105,113,117,119,125,135,],[78,-31,-32,-33,-34,-35,78,78,78,78,-30,-20,-21,-22,-23,-24,-25,-26,-27,78,78,-30,78,78,78,78,]),'MAYORQUE':([52,53,54,55,56,57,70,71,86,93,95,96,97,98,99,100,101,102,103,104,105,113,117,119,125,135,],[79,-31,-32,-33,-34,-35,79,79,79,79,-30,-20,-21,-22,-23,-24,-25,-26,-27,79,79,-30,79,79,79,79,]),'MAYORIGUAL':([52,53,54,55,56,57,70,71,86,93,95,96,97,98,99,100,101,102,103,104,105,113,117,119,125,135,],[80,-31,-32,-33,-34,-35,80,80,80,80,-30,-20,-21,-22,-23,-24,-25,-26,-27,80,80,-30,80,80,80,80,]),'IGUAL':([52,53,54,55,56,57,70,71,86,93,95,96,97,98,99,100,101,102,103,104,105,113,117,119,125,135,],[81,-31,-32,-33,-34,-35,81,81,81,81,-30,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,81,81,81,81,]),'DIFERENTE':([52,53,54,55,56,57,70,71,86,93,95,96,97,98,99,100,101,102,103,104,105,113,117,119,125,135,],[82,-31,-32,-33,-34,-35,82,82,82,82,-30,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,82,82,82,82,]),'MASMAS':([129,],[132,]),'MENOSMENOS':([129,],[133,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloque_codigo':([2,52,94,95,123,130,],[3,72,114,115,127,134,]),'lista_declaraciones':([4,],[6,]),'declaracion':([4,6,],[7,30,]),'si':([4,6,],[8,31,]),'mientras':([4,6,],[9,32,]),'for_loop':([4,6,],[10,33,]),'tipo':([4,6,58,],[11,11,84,]),'expresion':([23,50,51,59,69,73,74,75,76,77,78,79,80,81,82,106,108,118,131,],[52,70,71,86,93,96,97,98,99,100,101,102,103,104,105,117,119,125,135,]),'for_init':([58,],[83,]),'for_condicion':([106,],[116,]),'for_actualizacion':([124,],[128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> BEGIN bloque_codigo END','programa',3,'p_programa','AnalizadorSintactico.py',26),
  ('programa -> BEGIN bloque_codigo','programa',2,'p_programa_error','AnalizadorSintactico.py',30),
  ('bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C','bloque_codigo',3,'p_bloque_codigo','AnalizadorSintactico.py',34),
  ('bloque_codigo -> LLAVE_A lista_declaraciones','bloque_codigo',2,'p_bloque_codigo_error','AnalizadorSintactico.py',38),
  ('lista_declaraciones -> lista_declaraciones declaracion','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',43),
  ('lista_declaraciones -> lista_declaraciones si','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',44),
  ('lista_declaraciones -> lista_declaraciones mientras','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',45),
  ('lista_declaraciones -> lista_declaraciones for_loop','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',46),
  ('lista_declaraciones -> declaracion','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',47),
  ('lista_declaraciones -> si','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',48),
  ('lista_declaraciones -> mientras','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',49),
  ('lista_declaraciones -> for_loop','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',50),
  ('declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA','declaracion',5,'p_declaracion','AnalizadorSintactico.py',58),
  ('declaracion -> tipo ID ASIGNACION PUNTOCOMA','declaracion',4,'p_declaracion_error','AnalizadorSintactico.py',62),
  ('declaracion -> tipo ID ASIGNACION expresion','declaracion',4,'p_declaracion_error1','AnalizadorSintactico.py',66),
  ('tipo -> INT','tipo',1,'p_tipo','AnalizadorSintactico.py',70),
  ('tipo -> BOOL','tipo',1,'p_tipo','AnalizadorSintactico.py',71),
  ('tipo -> STG','tipo',1,'p_tipo','AnalizadorSintactico.py',72),
  ('tipo -> REAL','tipo',1,'p_tipo','AnalizadorSintactico.py',73),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',79),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',80),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',81),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',82),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',83),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',84),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',85),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',86),
  ('expresion -> expresion IGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',87),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',88),
  ('expresion -> PARENTESIS_A expresion PARENTESIS_B','expresion',3,'p_expresion_valores','AnalizadorSintactico.py',94),
  ('expresion -> NUMERO','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',95),
  ('expresion -> REAL_LIT','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',96),
  ('expresion -> CADENA','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',97),
  ('expresion -> TRUE','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',98),
  ('expresion -> FALSE','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',99),
  ('si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo','si',5,'p_si','AnalizadorSintactico.py',108),
  ('si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo','si',7,'p_si','AnalizadorSintactico.py',109),
  ('mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo','mientras',5,'p_mientras','AnalizadorSintactico.py',117),
  ('mientras -> WHILE expresion bloque_codigo','mientras',3,'p_mientras_error','AnalizadorSintactico.py',121),
  ('for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo','for_loop',9,'p_for_loop','AnalizadorSintactico.py',126),
  ('for_init -> tipo ID ASIGNACION expresion','for_init',4,'p_for_init','AnalizadorSintactico.py',132),
  ('for_init -> ID ASIGNACION expresion','for_init',3,'p_for_init','AnalizadorSintactico.py',133),
  ('for_condicion -> expresion','for_condicion',1,'p_for_condicion','AnalizadorSintactico.py',141),
  ('for_actualizacion -> ID ASIGNACION expresion','for_actualizacion',3,'p_for_actualizacion','AnalizadorSintactico.py',146),
  ('for_actualizacion -> ID MASMAS','for_actualizacion',2,'p_for_actualizacion','AnalizadorSintactico.py',147),
  ('for_actualizacion -> ID MENOSMENOS','for_actualizacion',2,'p_for_actualizacion','AnalizadorSintactico.py',148),
  ('declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA','declaracion',7,'p_comando_movimiento','AnalizadorSintactico.py',158),
  ('declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA','declaracion',6,'p_comando_movimiento_error','AnalizadorSintactico.py',162),
  ('declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA','declaracion',6,'p_comando_movimiento_error','AnalizadorSintactico.py',163),
  ('declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA','declaracion',4,'p_comando_espera','AnalizadorSintactico.py',168),
  ('declaracion -> WAIT_MOTION PUNTOCOMA','declaracion',2,'p_comando_espera_error','AnalizadorSintactico.py',172),
  ('declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B','declaracion',3,'p_comando_espera_error2','AnalizadorSintactico.py',176),
  ('declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA','declaracion',4,'p_comando_grabacion','AnalizadorSintactico.py',181),
  ('declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA','declaracion',4,'p_comando_grabacion','AnalizadorSintactico.py',182),
  ('declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B','declaracion',3,'p_comando_grabacion_error','AnalizadorSintactico.py',188),
  ('declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B','declaracion',3,'p_comando_grabacion_error','AnalizadorSintactico.py',189),
  ('declaracion -> START_RECORD PUNTOCOMA','declaracion',2,'p_comando_grabacion_error2','AnalizadorSintactico.py',195),
  ('declaracion -> STOP_RECORD PUNTOCOMA','declaracion',2,'p_comando_grabacion_error2','AnalizadorSintactico.py',196),
  ('declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA','declaracion',3,'p_comando_grabacion_error2','AnalizadorSintactico.py',197),
  ('declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA','declaracion',3,'p_comando_grabacion_error2','AnalizadorSintactico.py',198),
  ('declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA','declaracion',3,'p_comando_grabacion_error2','AnalizadorSintactico.py',199),
  ('declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA','declaracion',3,'p_comando_grabacion_error2','AnalizadorSintactico.py',200),
  ('declaracion -> LIGHT_ON PUNTOCOMA','declaracion',2,'p_comando_luz','AnalizadorSintactico.py',211),
  ('declaracion -> LIGHT_OFF PUNTOCOMA','declaracion',2,'p_comando_luz','AnalizadorSintactico.py',212),
  ('declaracion -> LIGHT_ON','declaracion',1,'p_comando_luz_error','AnalizadorSintactico.py',218),
  ('declaracion -> LIGHT_OFF','declaracion',1,'p_comando_luz_error','AnalizadorSintactico.py',219),
  ('declaracion -> ALARM_ON PUNTOCOMA','declaracion',2,'p_comando_alarma','AnalizadorSintactico.py',225),
  ('declaracion -> ALARM_OFF PUNTOCOMA','declaracion',2,'p_comando_alarma','AnalizadorSintactico.py',226),
  ('declaracion -> ALARM_ON','declaracion',1,'p_comando_alarma_error','AnalizadorSintactico.py',232),
  ('declaracion -> ALARM_OFF','declaracion',1,'p_comando_alarma_error','AnalizadorSintactico.py',233),
  ('declaracion -> SENSOR_PIR PUNTOCOMA','declaracion',2,'p_comando_sensorpir','AnalizadorSintactico.py',238),
  ('declaracion -> SENSOR_PIR','declaracion',1,'p_comando_sensorpir_error','AnalizadorSintactico.py',242),
  ('declaracion -> STOP PUNTOCOMA','declaracion',2,'p_comando_stop','AnalizadorSintactico.py',246),
  ('declaracion -> STOP','declaracion',1,'p_error_comando_stop','AnalizadorSintactico.py',250),
]
