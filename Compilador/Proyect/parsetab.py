
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIGUALDIFERENTEleftMENORQUEMENORIGUALMAYORQUEMAYORIGUALleftSUMARESTAleftMULTIPLICACIONDIVISIONALARM_OFF ALARM_ON AND ASIGNACION BEGIN BOOL CADENA COMA COMILLADOBLE COMILLASIMPLE CORCHETE_A CORCHETE_B DIFERENTE DIVISION ELSE END FALSE FOR FROM FUN ID IF IGUAL IMPORT INT LIGHT_OFF LIGHT_ON LLAVE_A LLAVE_C MASMAS MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOSMENOS MOVE_TO MULTIPLICACION NOT NUMERO OR PARENTESIS_A PARENTESIS_B PUNTO PUNTOCOMA REAL REAL_LIT RESTA RETURN SENSOR_PIR START_RECORD STG STOP STOP_RECORD SUMA TRUE WAIT_MOTION WHILE programa : BEGIN bloque_codigo END  bloque_codigo : LLAVE_A lista_declaraciones LLAVE_C \n    lista_declaraciones : lista_declaraciones declaracion\n                        | lista_declaraciones si\n                        | lista_declaraciones mientras\n                        | lista_declaraciones for_loop\n                        | declaracion\n                        | si\n                        | mientras\n                        | for_loop\n     declaracion : tipo ID ASIGNACION expresion PUNTOCOMA  declaracion : tipo ID ASIGNACION expresion  declaracion : tipo ID ASIGNACION PUNTOCOMA  tipo : INT\n             | BOOL\n             | STG\n             | REAL \n    expresion : expresion SUMA expresion\n              | expresion RESTA expresion\n              | expresion MULTIPLICACION expresion\n              | expresion DIVISION expresion\n              | expresion MENORQUE expresion\n              | expresion MENORIGUAL expresion\n              | expresion MAYORQUE expresion\n              | expresion MAYORIGUAL expresion\n              | expresion IGUAL expresion\n              | expresion DIFERENTE expresion\n     \n    expresion : PARENTESIS_A expresion PARENTESIS_B\n              | NUMERO\n              | REAL_LIT\n              | CADENA\n              | TRUE\n              | FALSE\n    \n    si : IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo\n       | IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo\n     mientras : WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo \n    for_loop : FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo\n    \n    for_init : tipo ID ASIGNACION expresion\n             | ID ASIGNACION expresion\n     for_condicion : expresion \n    for_actualizacion : ID ASIGNACION expresion\n                      | ID MASMAS\n                      | ID MENOSMENOS\n     declaracion : MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA  declaracion : MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA\n                    | MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA  \n     declaracion : WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA  declaracion : WAIT_MOTION PUNTOCOMA \n    declaracion : START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA\n                        | STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA\n    \n    declaracion : LIGHT_ON PUNTOCOMA\n                        | LIGHT_OFF PUNTOCOMA\n    \n    declaracion : ALARM_ON PUNTOCOMA\n                        | ALARM_OFF PUNTOCOMA\n     declaracion : STOP PUNTOCOMA  declaracion : STOP '
    
_lr_action_items = {'BEGIN':([0,],[2,]),'$end':([1,5,],[0,-1,]),'LLAVE_A':([2,72,83,111,118,],[4,4,4,4,4,]),'END':([3,28,],[5,-2,]),'MOVE_TO':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[12,12,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'WAIT_MOTION':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[13,13,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'START_RECORD':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[14,14,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'STOP_RECORD':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[15,15,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'LIGHT_ON':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[16,16,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'LIGHT_OFF':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[17,17,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'ALARM_ON':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[18,18,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'ALARM_OFF':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[19,19,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'STOP':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[20,20,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'IF':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[21,21,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'WHILE':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[22,22,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'FOR':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[23,23,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'INT':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,46,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[24,24,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,24,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'BOOL':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,46,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[25,25,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,25,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'STG':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,46,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[26,26,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,26,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'REAL':([4,6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,46,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[27,27,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,27,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'LLAVE_C':([6,7,8,9,10,20,28,29,30,31,32,36,39,40,41,42,43,55,56,57,58,59,64,65,68,69,70,87,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,114,115,122,],[28,-7,-8,-9,-10,-56,-2,-3,-4,-5,-6,-48,-51,-52,-53,-54,-55,-29,-30,-31,-32,-33,-12,-13,-47,-49,-50,-11,-28,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-36,-45,-46,-44,-35,-37,]),'ID':([11,24,25,26,27,46,62,112,],[33,-14,-15,-16,-17,63,85,117,]),'PARENTESIS_A':([12,13,14,15,21,22,23,44,45,47,53,73,74,75,76,77,78,79,80,81,82,84,86,106,119,],[34,35,37,38,44,45,46,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'PUNTOCOMA':([13,16,17,18,19,20,47,50,51,52,55,56,57,58,59,61,64,89,90,91,93,94,95,96,97,98,99,100,101,102,104,105,107,108,113,],[36,39,40,41,42,43,65,68,69,70,-29,-30,-31,-32,-33,84,87,109,110,-28,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,112,-40,-39,114,-38,]),'ELSE':([28,92,],[-2,111,]),'ASIGNACION':([33,63,85,117,],[47,86,106,119,]),'NUMERO':([34,44,45,47,49,53,66,73,74,75,76,77,78,79,80,81,82,84,86,106,119,],[48,55,55,55,67,55,88,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'COMA':([34,48,],[49,66,]),'PARENTESIS_B':([35,37,38,54,55,56,57,58,59,60,66,67,71,88,91,93,94,95,96,97,98,99,100,101,102,116,120,121,123,],[50,51,52,72,-29,-30,-31,-32,-33,83,89,90,91,108,-28,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,118,-42,-43,-41,]),'REAL_LIT':([44,45,47,53,73,74,75,76,77,78,79,80,81,82,84,86,106,119,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'CADENA':([44,45,47,53,73,74,75,76,77,78,79,80,81,82,84,86,106,119,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'TRUE':([44,45,47,53,73,74,75,76,77,78,79,80,81,82,84,86,106,119,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FALSE':([44,45,47,53,73,74,75,76,77,78,79,80,81,82,84,86,106,119,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'SUMA':([54,55,56,57,58,59,60,64,71,91,93,94,95,96,97,98,99,100,101,102,105,107,113,123,],[73,-29,-30,-31,-32,-33,73,73,73,-28,-18,-19,-20,-21,73,73,73,73,73,73,73,73,73,73,]),'RESTA':([54,55,56,57,58,59,60,64,71,91,93,94,95,96,97,98,99,100,101,102,105,107,113,123,],[74,-29,-30,-31,-32,-33,74,74,74,-28,-18,-19,-20,-21,74,74,74,74,74,74,74,74,74,74,]),'MULTIPLICACION':([54,55,56,57,58,59,60,64,71,91,93,94,95,96,97,98,99,100,101,102,105,107,113,123,],[75,-29,-30,-31,-32,-33,75,75,75,-28,75,75,-20,-21,75,75,75,75,75,75,75,75,75,75,]),'DIVISION':([54,55,56,57,58,59,60,64,71,91,93,94,95,96,97,98,99,100,101,102,105,107,113,123,],[76,-29,-30,-31,-32,-33,76,76,76,-28,76,76,-20,-21,76,76,76,76,76,76,76,76,76,76,]),'MENORQUE':([54,55,56,57,58,59,60,64,71,91,93,94,95,96,97,98,99,100,101,102,105,107,113,123,],[77,-29,-30,-31,-32,-33,77,77,77,-28,-18,-19,-20,-21,-22,-23,-24,-25,77,77,77,77,77,77,]),'MENORIGUAL':([54,55,56,57,58,59,60,64,71,91,93,94,95,96,97,98,99,100,101,102,105,107,113,123,],[78,-29,-30,-31,-32,-33,78,78,78,-28,-18,-19,-20,-21,-22,-23,-24,-25,78,78,78,78,78,78,]),'MAYORQUE':([54,55,56,57,58,59,60,64,71,91,93,94,95,96,97,98,99,100,101,102,105,107,113,123,],[79,-29,-30,-31,-32,-33,79,79,79,-28,-18,-19,-20,-21,-22,-23,-24,-25,79,79,79,79,79,79,]),'MAYORIGUAL':([54,55,56,57,58,59,60,64,71,91,93,94,95,96,97,98,99,100,101,102,105,107,113,123,],[80,-29,-30,-31,-32,-33,80,80,80,-28,-18,-19,-20,-21,-22,-23,-24,-25,80,80,80,80,80,80,]),'IGUAL':([54,55,56,57,58,59,60,64,71,91,93,94,95,96,97,98,99,100,101,102,105,107,113,123,],[81,-29,-30,-31,-32,-33,81,81,81,-28,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,81,81,81,81,]),'DIFERENTE':([54,55,56,57,58,59,60,64,71,91,93,94,95,96,97,98,99,100,101,102,105,107,113,123,],[82,-29,-30,-31,-32,-33,82,82,82,-28,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,82,82,82,82,]),'MASMAS':([117,],[120,]),'MENOSMENOS':([117,],[121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloque_codigo':([2,72,83,111,118,],[3,92,103,115,122,]),'lista_declaraciones':([4,],[6,]),'declaracion':([4,6,],[7,29,]),'si':([4,6,],[8,30,]),'mientras':([4,6,],[9,31,]),'for_loop':([4,6,],[10,32,]),'tipo':([4,6,46,],[11,11,62,]),'expresion':([44,45,47,53,73,74,75,76,77,78,79,80,81,82,84,86,106,119,],[54,60,64,71,93,94,95,96,97,98,99,100,101,102,105,107,113,123,]),'for_init':([46,],[61,]),'for_condicion':([84,],[104,]),'for_actualizacion':([112,],[116,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> BEGIN bloque_codigo END','programa',3,'p_programa','AnalizadorSintactico.py',22),
  ('bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C','bloque_codigo',3,'p_bloque_codigo','AnalizadorSintactico.py',26),
  ('lista_declaraciones -> lista_declaraciones declaracion','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',31),
  ('lista_declaraciones -> lista_declaraciones si','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',32),
  ('lista_declaraciones -> lista_declaraciones mientras','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',33),
  ('lista_declaraciones -> lista_declaraciones for_loop','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',34),
  ('lista_declaraciones -> declaracion','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',35),
  ('lista_declaraciones -> si','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',36),
  ('lista_declaraciones -> mientras','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',37),
  ('lista_declaraciones -> for_loop','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',38),
  ('declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA','declaracion',5,'p_declaracion','AnalizadorSintactico.py',46),
  ('declaracion -> tipo ID ASIGNACION expresion','declaracion',4,'p_declaracion_error1','AnalizadorSintactico.py',50),
  ('declaracion -> tipo ID ASIGNACION PUNTOCOMA','declaracion',4,'p_declaracion_error2','AnalizadorSintactico.py',54),
  ('tipo -> INT','tipo',1,'p_tipo','AnalizadorSintactico.py',58),
  ('tipo -> BOOL','tipo',1,'p_tipo','AnalizadorSintactico.py',59),
  ('tipo -> STG','tipo',1,'p_tipo','AnalizadorSintactico.py',60),
  ('tipo -> REAL','tipo',1,'p_tipo','AnalizadorSintactico.py',61),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',67),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',68),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',69),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',70),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',71),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',72),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',73),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',74),
  ('expresion -> expresion IGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',75),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',76),
  ('expresion -> PARENTESIS_A expresion PARENTESIS_B','expresion',3,'p_expresion_valores','AnalizadorSintactico.py',82),
  ('expresion -> NUMERO','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',83),
  ('expresion -> REAL_LIT','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',84),
  ('expresion -> CADENA','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',85),
  ('expresion -> TRUE','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',86),
  ('expresion -> FALSE','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',87),
  ('si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo','si',5,'p_si','AnalizadorSintactico.py',96),
  ('si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo','si',7,'p_si','AnalizadorSintactico.py',97),
  ('mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo','mientras',5,'p_mientras','AnalizadorSintactico.py',105),
  ('for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo','for_loop',9,'p_for_loop','AnalizadorSintactico.py',110),
  ('for_init -> tipo ID ASIGNACION expresion','for_init',4,'p_for_init','AnalizadorSintactico.py',116),
  ('for_init -> ID ASIGNACION expresion','for_init',3,'p_for_init','AnalizadorSintactico.py',117),
  ('for_condicion -> expresion','for_condicion',1,'p_for_condicion','AnalizadorSintactico.py',125),
  ('for_actualizacion -> ID ASIGNACION expresion','for_actualizacion',3,'p_for_actualizacion','AnalizadorSintactico.py',130),
  ('for_actualizacion -> ID MASMAS','for_actualizacion',2,'p_for_actualizacion','AnalizadorSintactico.py',131),
  ('for_actualizacion -> ID MENOSMENOS','for_actualizacion',2,'p_for_actualizacion','AnalizadorSintactico.py',132),
  ('declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA','declaracion',7,'p_comando_movimiento','AnalizadorSintactico.py',142),
  ('declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA','declaracion',6,'p_comando_movimiento_error','AnalizadorSintactico.py',146),
  ('declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA','declaracion',6,'p_comando_movimiento_error','AnalizadorSintactico.py',147),
  ('declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA','declaracion',4,'p_comando_espera','AnalizadorSintactico.py',154),
  ('declaracion -> WAIT_MOTION PUNTOCOMA','declaracion',2,'p_comando_espera_error','AnalizadorSintactico.py',158),
  ('declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA','declaracion',4,'p_comando_grabacion','AnalizadorSintactico.py',163),
  ('declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA','declaracion',4,'p_comando_grabacion','AnalizadorSintactico.py',164),
  ('declaracion -> LIGHT_ON PUNTOCOMA','declaracion',2,'p_comando_luz','AnalizadorSintactico.py',170),
  ('declaracion -> LIGHT_OFF PUNTOCOMA','declaracion',2,'p_comando_luz','AnalizadorSintactico.py',171),
  ('declaracion -> ALARM_ON PUNTOCOMA','declaracion',2,'p_comando_alarma','AnalizadorSintactico.py',177),
  ('declaracion -> ALARM_OFF PUNTOCOMA','declaracion',2,'p_comando_alarma','AnalizadorSintactico.py',178),
  ('declaracion -> STOP PUNTOCOMA','declaracion',2,'p_comando_stop','AnalizadorSintactico.py',183),
  ('declaracion -> STOP','declaracion',1,'p_error_comando_stop','AnalizadorSintactico.py',187),
]
