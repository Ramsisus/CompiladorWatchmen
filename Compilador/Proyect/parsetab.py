
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIGUALDIFERENTEleftMENORQUEMENORIGUALMAYORQUEMAYORIGUALleftSUMARESTAleftMULTIPLICACIONDIVISIONALARM_OFF ALARM_ON AND ASIGNACION BEGIN BOOL CADENA COMA COMILLADOBLE COMILLASIMPLE CORCHETE_A CORCHETE_B DIFERENTE DIVISION ELSE END FALSE FOR FROM FUN ID IF IGUAL IMPORT INT LIGHT_OFF LIGHT_ON LLAVE_A LLAVE_C MASMAS MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOSMENOS MOVE_TO MULTIPLICACION NOT NUMERO OR PARENTESIS_A PARENTESIS_B PUNTO PUNTOCOMA REAL REAL_LIT RESTA RETURN SENSOR_PIR START_RECORD STG STOP STOP_RECORD SUMA TRUE WAIT_MOTION WHILE programa : BEGIN bloque_codigo END  programa : BEGIN bloque_codigo  bloque_codigo : LLAVE_A lista_declaraciones LLAVE_C  bloque_codigo : LLAVE_A lista_declaraciones \n    lista_declaraciones : lista_declaraciones declaracion\n                        | lista_declaraciones si\n                        | lista_declaraciones mientras\n                        | lista_declaraciones for_loop\n                        | declaracion\n                        | si\n                        | mientras\n                        | for_loop\n     declaracion : tipo ID ASIGNACION expresion PUNTOCOMA  declaracion : tipo ID ASIGNACION PUNTOCOMA  declaracion : tipo ID ASIGNACION expresion  tipo : INT\n             | BOOL\n             | STG\n             | REAL  expresion : ID \n    expresion : expresion SUMA expresion\n              | expresion RESTA expresion\n              | expresion MULTIPLICACION expresion\n              | expresion DIVISION expresion\n              | expresion MENORQUE expresion\n              | expresion MENORIGUAL expresion\n              | expresion MAYORQUE expresion\n              | expresion MAYORIGUAL expresion\n              | expresion IGUAL expresion\n              | expresion DIFERENTE expresion\n     \n    expresion : PARENTESIS_A expresion PARENTESIS_B\n              | NUMERO\n              | REAL_LIT\n              | CADENA\n              | TRUE\n              | FALSE\n    \n    si : IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo\n       | IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo\n     mientras : WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo  mientras : WHILE expresion  bloque_codigo \n    for_loop : FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo\n    \n    for_init : tipo ID ASIGNACION expresion\n             | ID ASIGNACION expresion\n     for_condicion : expresion \n    for_actualizacion : ID ASIGNACION expresion\n                      | ID MASMAS\n                      | ID MENOSMENOS\n     declaracion : MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA  declaracion : MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA\n                    | MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA  \n     declaracion : MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA\n     declaracion : MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B\n     declaracion : MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA\n     declaracion : MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA\n     declaracion : MOVE_TO  NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA  declaracion : MOVE_TO PARENTESIS_A NUMERO COMA NUMERO  PUNTOCOMA  declaracion : MOVE_TO  NUMERO COMA NUMERO  PUNTOCOMA  declaracion : WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA  declaracion : WAIT_MOTION PUNTOCOMA  declaracion : WAIT_MOTION PARENTESIS_A PARENTESIS_B \n    declaracion : START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA\n                        | STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA\n    \n    declaracion : START_RECORD PARENTESIS_A PARENTESIS_B\n                        | STOP_RECORD PARENTESIS_A PARENTESIS_B \n    \n    declaracion : START_RECORD PUNTOCOMA\n                | STOP_RECORD PUNTOCOMA\n                | START_RECORD PARENTESIS_A PUNTOCOMA\n                | START_RECORD PARENTESIS_B PUNTOCOMA\n                | STOP_RECORD PARENTESIS_A PUNTOCOMA\n                | STOP_RECORD PARENTESIS_B PUNTOCOMA\n    \n    declaracion : LIGHT_ON PUNTOCOMA\n                        | LIGHT_OFF PUNTOCOMA\n    \n    declaracion : LIGHT_ON\n                | LIGHT_OFF\n    \n    declaracion : ALARM_ON PUNTOCOMA\n                        | ALARM_OFF PUNTOCOMA\n    \n    declaracion : ALARM_ON\n                | ALARM_OFF\n     declaracion : SENSOR_PIR PUNTOCOMA  declaracion : SENSOR_PIR  declaracion : STOP PUNTOCOMA  declaracion : STOP '
    
_lr_action_items = {'BEGIN':([0,],[2,]),'$end':([1,3,5,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[0,-2,-1,-4,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'LLAVE_A':([2,53,54,55,56,57,58,59,102,103,104,105,106,107,108,109,110,111,112,113,125,138,145,],[4,4,-20,-32,-33,-34,-35,-36,4,4,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,4,4,]),'END':([3,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[5,-4,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'MOVE_TO':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[12,12,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'WAIT_MOTION':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[13,13,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'START_RECORD':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[14,14,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'STOP_RECORD':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[15,15,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'LIGHT_ON':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[16,16,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'LIGHT_OFF':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[17,17,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'ALARM_ON':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[18,18,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'ALARM_OFF':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[19,19,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'SENSOR_PIR':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[20,20,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'STOP':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[21,21,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'IF':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[22,22,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'WHILE':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[23,23,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'FOR':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[24,24,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'INT':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,60,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[25,25,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,25,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'BOOL':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,60,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[26,26,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,26,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'STG':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,60,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[27,27,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,27,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'REAL':([4,6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,60,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[28,28,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,28,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'LLAVE_C':([6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[29,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,-37,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'ELSE':([6,7,8,9,10,16,17,18,19,20,21,29,30,31,32,33,38,41,44,45,46,47,48,49,50,54,55,56,57,58,59,66,67,68,69,70,71,72,76,90,91,96,98,99,100,104,105,106,107,108,109,110,111,112,113,117,121,124,125,126,127,132,133,134,135,136,137,141,142,149,],[-4,-9,-10,-11,-12,-73,-74,-77,-78,-80,-82,-3,-5,-6,-7,-8,-59,-65,-66,-71,-72,-75,-76,-79,-81,-20,-32,-33,-34,-35,-36,-60,-63,-67,-68,-64,-69,-70,-40,-15,-14,-53,-58,-61,-62,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-13,-54,-57,-31,138,-39,-51,-52,-56,-49,-50,-55,-48,-38,-41,]),'ID':([11,23,25,26,27,28,51,52,60,61,73,77,78,79,80,81,82,83,84,85,86,88,114,116,130,139,146,],[34,54,-16,-17,-18,-19,54,54,89,54,54,54,54,54,54,54,54,54,54,54,54,115,54,54,54,144,54,]),'PARENTESIS_A':([12,13,14,15,22,23,24,51,52,61,73,77,78,79,80,81,82,83,84,85,86,114,116,130,146,],[35,37,39,42,51,52,60,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'NUMERO':([12,23,35,51,52,61,62,63,65,73,77,78,79,80,81,82,83,84,85,86,93,114,116,130,146,],[36,55,62,55,55,55,92,95,97,55,55,55,55,55,55,55,55,55,55,55,119,55,55,55,55,]),'PUNTOCOMA':([13,14,15,16,17,18,19,20,21,39,40,42,43,54,55,56,57,58,59,61,64,66,67,70,87,90,94,97,104,105,106,107,108,109,110,111,112,113,118,119,120,122,123,125,128,129,131,133,140,],[38,41,44,45,46,47,48,49,50,68,69,71,72,-20,-32,-33,-34,-35,-36,91,96,98,99,100,114,117,121,124,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,132,134,135,136,137,-31,139,-44,-43,141,-42,]),'PARENTESIS_B':([14,15,35,37,39,42,54,55,56,57,58,59,62,74,75,92,93,95,97,101,104,105,106,107,108,109,110,111,112,113,119,125,143,147,148,150,],[40,43,64,66,67,70,-20,-32,-33,-34,-35,-36,94,102,103,118,120,122,123,125,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,133,-31,145,-46,-47,-45,]),'REAL_LIT':([23,51,52,61,73,77,78,79,80,81,82,83,84,85,86,114,116,130,146,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'CADENA':([23,51,52,61,73,77,78,79,80,81,82,83,84,85,86,114,116,130,146,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'TRUE':([23,51,52,61,73,77,78,79,80,81,82,83,84,85,86,114,116,130,146,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FALSE':([23,51,52,61,73,77,78,79,80,81,82,83,84,85,86,114,116,130,146,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'ASIGNACION':([34,89,115,144,],[61,116,130,146,]),'COMA':([35,36,62,],[63,65,93,]),'SUMA':([53,54,55,56,57,58,59,74,75,90,101,103,104,105,106,107,108,109,110,111,112,113,125,129,131,140,150,],[77,-20,-32,-33,-34,-35,-36,77,77,77,77,-31,-21,-22,-23,-24,77,77,77,77,77,77,-31,77,77,77,77,]),'RESTA':([53,54,55,56,57,58,59,74,75,90,101,103,104,105,106,107,108,109,110,111,112,113,125,129,131,140,150,],[78,-20,-32,-33,-34,-35,-36,78,78,78,78,-31,-21,-22,-23,-24,78,78,78,78,78,78,-31,78,78,78,78,]),'MULTIPLICACION':([53,54,55,56,57,58,59,74,75,90,101,103,104,105,106,107,108,109,110,111,112,113,125,129,131,140,150,],[79,-20,-32,-33,-34,-35,-36,79,79,79,79,-31,79,79,-23,-24,79,79,79,79,79,79,-31,79,79,79,79,]),'DIVISION':([53,54,55,56,57,58,59,74,75,90,101,103,104,105,106,107,108,109,110,111,112,113,125,129,131,140,150,],[80,-20,-32,-33,-34,-35,-36,80,80,80,80,-31,80,80,-23,-24,80,80,80,80,80,80,-31,80,80,80,80,]),'MENORQUE':([53,54,55,56,57,58,59,74,75,90,101,103,104,105,106,107,108,109,110,111,112,113,125,129,131,140,150,],[81,-20,-32,-33,-34,-35,-36,81,81,81,81,-31,-21,-22,-23,-24,-25,-26,-27,-28,81,81,-31,81,81,81,81,]),'MENORIGUAL':([53,54,55,56,57,58,59,74,75,90,101,103,104,105,106,107,108,109,110,111,112,113,125,129,131,140,150,],[82,-20,-32,-33,-34,-35,-36,82,82,82,82,-31,-21,-22,-23,-24,-25,-26,-27,-28,82,82,-31,82,82,82,82,]),'MAYORQUE':([53,54,55,56,57,58,59,74,75,90,101,103,104,105,106,107,108,109,110,111,112,113,125,129,131,140,150,],[83,-20,-32,-33,-34,-35,-36,83,83,83,83,-31,-21,-22,-23,-24,-25,-26,-27,-28,83,83,-31,83,83,83,83,]),'MAYORIGUAL':([53,54,55,56,57,58,59,74,75,90,101,103,104,105,106,107,108,109,110,111,112,113,125,129,131,140,150,],[84,-20,-32,-33,-34,-35,-36,84,84,84,84,-31,-21,-22,-23,-24,-25,-26,-27,-28,84,84,-31,84,84,84,84,]),'IGUAL':([53,54,55,56,57,58,59,74,75,90,101,103,104,105,106,107,108,109,110,111,112,113,125,129,131,140,150,],[85,-20,-32,-33,-34,-35,-36,85,85,85,85,-31,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,85,85,85,85,]),'DIFERENTE':([53,54,55,56,57,58,59,74,75,90,101,103,104,105,106,107,108,109,110,111,112,113,125,129,131,140,150,],[86,-20,-32,-33,-34,-35,-36,86,86,86,86,-31,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,86,86,86,86,]),'MASMAS':([144,],[147,]),'MENOSMENOS':([144,],[148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloque_codigo':([2,53,102,103,138,145,],[3,76,126,127,142,149,]),'lista_declaraciones':([4,],[6,]),'declaracion':([4,6,],[7,30,]),'si':([4,6,],[8,31,]),'mientras':([4,6,],[9,32,]),'for_loop':([4,6,],[10,33,]),'tipo':([4,6,60,],[11,11,88,]),'expresion':([23,51,52,61,73,77,78,79,80,81,82,83,84,85,86,114,116,130,146,],[53,74,75,90,101,104,105,106,107,108,109,110,111,112,113,129,131,140,150,]),'for_init':([60,],[87,]),'for_condicion':([114,],[128,]),'for_actualizacion':([139,],[143,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> BEGIN bloque_codigo END','programa',3,'p_programa','AnalizadorSintactico.py',26),
  ('programa -> BEGIN bloque_codigo','programa',2,'p_programa_error','AnalizadorSintactico.py',30),
  ('bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C','bloque_codigo',3,'p_bloque_codigo','AnalizadorSintactico.py',34),
  ('bloque_codigo -> LLAVE_A lista_declaraciones','bloque_codigo',2,'p_bloque_codigo_error','AnalizadorSintactico.py',38),
  ('lista_declaraciones -> lista_declaraciones declaracion','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',43),
  ('lista_declaraciones -> lista_declaraciones si','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',44),
  ('lista_declaraciones -> lista_declaraciones mientras','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',45),
  ('lista_declaraciones -> lista_declaraciones for_loop','lista_declaraciones',2,'p_lista_declaraciones','AnalizadorSintactico.py',46),
  ('lista_declaraciones -> declaracion','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',47),
  ('lista_declaraciones -> si','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',48),
  ('lista_declaraciones -> mientras','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',49),
  ('lista_declaraciones -> for_loop','lista_declaraciones',1,'p_lista_declaraciones','AnalizadorSintactico.py',50),
  ('declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA','declaracion',5,'p_declaracion','AnalizadorSintactico.py',58),
  ('declaracion -> tipo ID ASIGNACION PUNTOCOMA','declaracion',4,'p_declaracion_error','AnalizadorSintactico.py',62),
  ('declaracion -> tipo ID ASIGNACION expresion','declaracion',4,'p_declaracion_error1','AnalizadorSintactico.py',66),
  ('tipo -> INT','tipo',1,'p_tipo','AnalizadorSintactico.py',70),
  ('tipo -> BOOL','tipo',1,'p_tipo','AnalizadorSintactico.py',71),
  ('tipo -> STG','tipo',1,'p_tipo','AnalizadorSintactico.py',72),
  ('tipo -> REAL','tipo',1,'p_tipo','AnalizadorSintactico.py',73),
  ('expresion -> ID','expresion',1,'p_expresion_id','AnalizadorSintactico.py',77),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',83),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',84),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',85),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',86),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',87),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',88),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',89),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',90),
  ('expresion -> expresion IGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',91),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',92),
  ('expresion -> PARENTESIS_A expresion PARENTESIS_B','expresion',3,'p_expresion_valores','AnalizadorSintactico.py',98),
  ('expresion -> NUMERO','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',99),
  ('expresion -> REAL_LIT','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',100),
  ('expresion -> CADENA','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',101),
  ('expresion -> TRUE','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',102),
  ('expresion -> FALSE','expresion',1,'p_expresion_valores','AnalizadorSintactico.py',103),
  ('si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo','si',5,'p_si','AnalizadorSintactico.py',112),
  ('si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo','si',7,'p_si','AnalizadorSintactico.py',113),
  ('mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo','mientras',5,'p_mientras','AnalizadorSintactico.py',121),
  ('mientras -> WHILE expresion bloque_codigo','mientras',3,'p_mientras_error','AnalizadorSintactico.py',125),
  ('for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo','for_loop',9,'p_for_loop','AnalizadorSintactico.py',130),
  ('for_init -> tipo ID ASIGNACION expresion','for_init',4,'p_for_init','AnalizadorSintactico.py',136),
  ('for_init -> ID ASIGNACION expresion','for_init',3,'p_for_init','AnalizadorSintactico.py',137),
  ('for_condicion -> expresion','for_condicion',1,'p_for_condicion','AnalizadorSintactico.py',145),
  ('for_actualizacion -> ID ASIGNACION expresion','for_actualizacion',3,'p_for_actualizacion','AnalizadorSintactico.py',150),
  ('for_actualizacion -> ID MASMAS','for_actualizacion',2,'p_for_actualizacion','AnalizadorSintactico.py',151),
  ('for_actualizacion -> ID MENOSMENOS','for_actualizacion',2,'p_for_actualizacion','AnalizadorSintactico.py',152),
  ('declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA','declaracion',7,'p_comando_movimiento','AnalizadorSintactico.py',162),
  ('declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA','declaracion',6,'p_comando_movimiento_error','AnalizadorSintactico.py',166),
  ('declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA','declaracion',6,'p_comando_movimiento_error','AnalizadorSintactico.py',167),
  ('declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA','declaracion',6,'p_comando_movimiento_error2','AnalizadorSintactico.py',172),
  ('declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B','declaracion',6,'p_comando_movimiento_error3','AnalizadorSintactico.py',177),
  ('declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA','declaracion',4,'p_comando_movimiento_error4','AnalizadorSintactico.py',182),
  ('declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA','declaracion',5,'p_comando_movimiento_error5','AnalizadorSintactico.py',187),
  ('declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA','declaracion',6,'p_comando_movimiento_error6','AnalizadorSintactico.py',192),
  ('declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA','declaracion',6,'p_comando_movimiento_error7','AnalizadorSintactico.py',196),
  ('declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA','declaracion',5,'p_comando_movimiento_error8','AnalizadorSintactico.py',200),
  ('declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA','declaracion',4,'p_comando_espera','AnalizadorSintactico.py',205),
  ('declaracion -> WAIT_MOTION PUNTOCOMA','declaracion',2,'p_comando_espera_error','AnalizadorSintactico.py',209),
  ('declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B','declaracion',3,'p_comando_espera_error2','AnalizadorSintactico.py',213),
  ('declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA','declaracion',4,'p_comando_grabacion','AnalizadorSintactico.py',218),
  ('declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA','declaracion',4,'p_comando_grabacion','AnalizadorSintactico.py',219),
  ('declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B','declaracion',3,'p_comando_grabacion_error','AnalizadorSintactico.py',225),
  ('declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B','declaracion',3,'p_comando_grabacion_error','AnalizadorSintactico.py',226),
  ('declaracion -> START_RECORD PUNTOCOMA','declaracion',2,'p_comando_grabacion_error2','AnalizadorSintactico.py',232),
  ('declaracion -> STOP_RECORD PUNTOCOMA','declaracion',2,'p_comando_grabacion_error2','AnalizadorSintactico.py',233),
  ('declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA','declaracion',3,'p_comando_grabacion_error2','AnalizadorSintactico.py',234),
  ('declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA','declaracion',3,'p_comando_grabacion_error2','AnalizadorSintactico.py',235),
  ('declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA','declaracion',3,'p_comando_grabacion_error2','AnalizadorSintactico.py',236),
  ('declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA','declaracion',3,'p_comando_grabacion_error2','AnalizadorSintactico.py',237),
  ('declaracion -> LIGHT_ON PUNTOCOMA','declaracion',2,'p_comando_luz','AnalizadorSintactico.py',248),
  ('declaracion -> LIGHT_OFF PUNTOCOMA','declaracion',2,'p_comando_luz','AnalizadorSintactico.py',249),
  ('declaracion -> LIGHT_ON','declaracion',1,'p_comando_luz_error','AnalizadorSintactico.py',255),
  ('declaracion -> LIGHT_OFF','declaracion',1,'p_comando_luz_error','AnalizadorSintactico.py',256),
  ('declaracion -> ALARM_ON PUNTOCOMA','declaracion',2,'p_comando_alarma','AnalizadorSintactico.py',262),
  ('declaracion -> ALARM_OFF PUNTOCOMA','declaracion',2,'p_comando_alarma','AnalizadorSintactico.py',263),
  ('declaracion -> ALARM_ON','declaracion',1,'p_comando_alarma_error','AnalizadorSintactico.py',269),
  ('declaracion -> ALARM_OFF','declaracion',1,'p_comando_alarma_error','AnalizadorSintactico.py',270),
  ('declaracion -> SENSOR_PIR PUNTOCOMA','declaracion',2,'p_comando_sensorpir','AnalizadorSintactico.py',275),
  ('declaracion -> SENSOR_PIR','declaracion',1,'p_comando_sensorpir_error','AnalizadorSintactico.py',279),
  ('declaracion -> STOP PUNTOCOMA','declaracion',2,'p_comando_stop','AnalizadorSintactico.py',283),
  ('declaracion -> STOP','declaracion',1,'p_error_comando_stop','AnalizadorSintactico.py',287),
]
