Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMILLADOBLE
    COMILLASIMPLE
    CORCHETE_A
    CORCHETE_B
    FROM
    FUN
    IMPORT
    NOT
    OR
    PUNTO
    RETURN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> bloque_codigo END
Rule 2     programa -> BEGIN bloque_codigo END
Rule 3     programa -> BEGIN bloque_codigo
Rule 4     bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C
Rule 5     bloque_codigo -> LLAVE_A lista_declaraciones
Rule 6     lista_declaraciones -> lista_declaraciones declaracion
Rule 7     lista_declaraciones -> lista_declaraciones si
Rule 8     lista_declaraciones -> lista_declaraciones mientras
Rule 9     lista_declaraciones -> lista_declaraciones for_loop
Rule 10    lista_declaraciones -> declaracion
Rule 11    lista_declaraciones -> si
Rule 12    lista_declaraciones -> mientras
Rule 13    lista_declaraciones -> for_loop
Rule 14    declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA
Rule 15    declaracion -> tipo ID ASIGNACION PUNTOCOMA
Rule 16    declaracion -> tipo ID ASIGNACION expresion
Rule 17    tipo -> INT
Rule 18    tipo -> BOOL
Rule 19    tipo -> STG
Rule 20    tipo -> REAL
Rule 21    expresion -> ID
Rule 22    expresion -> expresion SUMA expresion
Rule 23    expresion -> expresion RESTA expresion
Rule 24    expresion -> expresion MULTIPLICACION expresion
Rule 25    expresion -> expresion DIVISION expresion
Rule 26    expresion -> expresion MENORQUE expresion
Rule 27    expresion -> expresion MENORIGUAL expresion
Rule 28    expresion -> expresion MAYORQUE expresion
Rule 29    expresion -> expresion MAYORIGUAL expresion
Rule 30    expresion -> expresion IGUAL expresion
Rule 31    expresion -> expresion DIFERENTE expresion
Rule 32    expresion -> PARENTESIS_A expresion PARENTESIS_B
Rule 33    expresion -> NUMERO
Rule 34    expresion -> REAL_LIT
Rule 35    expresion -> CADENA
Rule 36    expresion -> TRUE
Rule 37    expresion -> FALSE
Rule 38    si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo
Rule 39    si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo
Rule 40    mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo
Rule 41    mientras -> WHILE expresion bloque_codigo
Rule 42    for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo
Rule 43    for_init -> tipo ID ASIGNACION expresion
Rule 44    for_init -> ID ASIGNACION expresion
Rule 45    for_condicion -> expresion
Rule 46    for_actualizacion -> ID ASIGNACION expresion
Rule 47    for_actualizacion -> ID MASMAS
Rule 48    for_actualizacion -> ID MENOSMENOS
Rule 49    declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA
Rule 50    declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA
Rule 51    declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA
Rule 52    declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA
Rule 53    declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B
Rule 54    declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA
Rule 55    declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA
Rule 56    declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA
Rule 57    declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA
Rule 58    declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA
Rule 59    declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA
Rule 60    declaracion -> WAIT_MOTION PUNTOCOMA
Rule 61    declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B
Rule 62    declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA
Rule 63    declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA
Rule 64    declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B
Rule 65    declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B
Rule 66    declaracion -> START_RECORD PUNTOCOMA
Rule 67    declaracion -> STOP_RECORD PUNTOCOMA
Rule 68    declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA
Rule 69    declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA
Rule 70    declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA
Rule 71    declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA
Rule 72    declaracion -> LIGHT_ON PUNTOCOMA
Rule 73    declaracion -> LIGHT_OFF PUNTOCOMA
Rule 74    declaracion -> LIGHT_ON
Rule 75    declaracion -> LIGHT_OFF
Rule 76    declaracion -> ALARM_ON PUNTOCOMA
Rule 77    declaracion -> ALARM_OFF PUNTOCOMA
Rule 78    declaracion -> ALARM_ON
Rule 79    declaracion -> ALARM_OFF
Rule 80    declaracion -> SENSOR_PIR PUNTOCOMA
Rule 81    declaracion -> SENSOR_PIR
Rule 82    declaracion -> STOP PUNTOCOMA
Rule 83    declaracion -> STOP

Terminals, with rules where they appear

ALARM_OFF            : 77 79
ALARM_ON             : 76 78
AND                  : 
ASIGNACION           : 14 15 16 43 44 46
BEGIN                : 2 3
BOOL                 : 18
CADENA               : 35
COMA                 : 49 50 51 53 56 57 58
COMILLADOBLE         : 
COMILLASIMPLE        : 
CORCHETE_A           : 
CORCHETE_B           : 
DIFERENTE            : 31
DIVISION             : 25
ELSE                 : 39
END                  : 1 2
FALSE                : 37
FOR                  : 42
FROM                 : 
FUN                  : 
ID                   : 14 15 16 21 43 44 46 47 48
IF                   : 38 39
IGUAL                : 30
IMPORT               : 
INT                  : 17
LIGHT_OFF            : 73 75
LIGHT_ON             : 72 74
LLAVE_A              : 4 5
LLAVE_C              : 4
MASMAS               : 47
MAYORIGUAL           : 29
MAYORQUE             : 28
MENORIGUAL           : 27
MENORQUE             : 26
MENOSMENOS           : 48
MOVE_TO              : 49 50 51 52 53 54 55 56 57 58
MULTIPLICACION       : 24
NOT                  : 
NUMERO               : 33 49 49 50 51 52 52 53 53 55 56 56 57 57 58 58
OR                   : 
PARENTESIS_A         : 32 38 39 40 42 49 50 51 52 53 54 55 57 59 61 62 63 64 65 68 70
PARENTESIS_B         : 32 38 39 40 42 49 50 51 52 53 54 55 56 59 61 62 63 64 65 69 71
PUNTO                : 
PUNTOCOMA            : 14 15 42 42 49 50 51 52 54 55 56 57 58 59 60 62 63 66 67 68 69 70 71 72 73 76 77 80 82
REAL                 : 20
REAL_LIT             : 34
RESTA                : 23
RETURN               : 
SENSOR_PIR           : 80 81
START_RECORD         : 62 64 66 68 69
STG                  : 19
STOP                 : 82 83
STOP_RECORD          : 63 65 67 70 71
SUMA                 : 22
TRUE                 : 36
WAIT_MOTION          : 59 60 61
WHILE                : 40 41
error                : 

Nonterminals, with rules where they appear

bloque_codigo        : 1 2 3 38 39 39 40 41 42
declaracion          : 6 10
expresion            : 14 16 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 38 39 40 41 43 44 45 46
for_actualizacion    : 42
for_condicion        : 42
for_init             : 42
for_loop             : 9 13
lista_declaraciones  : 4 5 6 7 8 9
mientras             : 8 12
programa             : 0
si                   : 7 11
tipo                 : 14 15 16 43

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . bloque_codigo END
    (2) programa -> . BEGIN bloque_codigo END
    (3) programa -> . BEGIN bloque_codigo
    (4) bloque_codigo -> . LLAVE_A lista_declaraciones LLAVE_C
    (5) bloque_codigo -> . LLAVE_A lista_declaraciones

    BEGIN           shift and go to state 3
    LLAVE_A         shift and go to state 4

    programa                       shift and go to state 1
    bloque_codigo                  shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> bloque_codigo . END

    END             shift and go to state 5


state 3

    (2) programa -> BEGIN . bloque_codigo END
    (3) programa -> BEGIN . bloque_codigo
    (4) bloque_codigo -> . LLAVE_A lista_declaraciones LLAVE_C
    (5) bloque_codigo -> . LLAVE_A lista_declaraciones

    LLAVE_A         shift and go to state 4

    bloque_codigo                  shift and go to state 6

state 4

    (4) bloque_codigo -> LLAVE_A . lista_declaraciones LLAVE_C
    (5) bloque_codigo -> LLAVE_A . lista_declaraciones
    (6) lista_declaraciones -> . lista_declaraciones declaracion
    (7) lista_declaraciones -> . lista_declaraciones si
    (8) lista_declaraciones -> . lista_declaraciones mientras
    (9) lista_declaraciones -> . lista_declaraciones for_loop
    (10) lista_declaraciones -> . declaracion
    (11) lista_declaraciones -> . si
    (12) lista_declaraciones -> . mientras
    (13) lista_declaraciones -> . for_loop
    (14) declaracion -> . tipo ID ASIGNACION expresion PUNTOCOMA
    (15) declaracion -> . tipo ID ASIGNACION PUNTOCOMA
    (16) declaracion -> . tipo ID ASIGNACION expresion
    (49) declaracion -> . MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA
    (50) declaracion -> . MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA
    (51) declaracion -> . MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA
    (52) declaracion -> . MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA
    (53) declaracion -> . MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B
    (54) declaracion -> . MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (55) declaracion -> . MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA
    (56) declaracion -> . MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA
    (57) declaracion -> . MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA
    (58) declaracion -> . MOVE_TO NUMERO COMA NUMERO PUNTOCOMA
    (59) declaracion -> . WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (60) declaracion -> . WAIT_MOTION PUNTOCOMA
    (61) declaracion -> . WAIT_MOTION PARENTESIS_A PARENTESIS_B
    (62) declaracion -> . START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (63) declaracion -> . STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (64) declaracion -> . START_RECORD PARENTESIS_A PARENTESIS_B
    (65) declaracion -> . STOP_RECORD PARENTESIS_A PARENTESIS_B
    (66) declaracion -> . START_RECORD PUNTOCOMA
    (67) declaracion -> . STOP_RECORD PUNTOCOMA
    (68) declaracion -> . START_RECORD PARENTESIS_A PUNTOCOMA
    (69) declaracion -> . START_RECORD PARENTESIS_B PUNTOCOMA
    (70) declaracion -> . STOP_RECORD PARENTESIS_A PUNTOCOMA
    (71) declaracion -> . STOP_RECORD PARENTESIS_B PUNTOCOMA
    (72) declaracion -> . LIGHT_ON PUNTOCOMA
    (73) declaracion -> . LIGHT_OFF PUNTOCOMA
    (74) declaracion -> . LIGHT_ON
    (75) declaracion -> . LIGHT_OFF
    (76) declaracion -> . ALARM_ON PUNTOCOMA
    (77) declaracion -> . ALARM_OFF PUNTOCOMA
    (78) declaracion -> . ALARM_ON
    (79) declaracion -> . ALARM_OFF
    (80) declaracion -> . SENSOR_PIR PUNTOCOMA
    (81) declaracion -> . SENSOR_PIR
    (82) declaracion -> . STOP PUNTOCOMA
    (83) declaracion -> . STOP
    (38) si -> . IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo
    (39) si -> . IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo
    (40) mientras -> . WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo
    (41) mientras -> . WHILE expresion bloque_codigo
    (42) for_loop -> . FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo
    (17) tipo -> . INT
    (18) tipo -> . BOOL
    (19) tipo -> . STG
    (20) tipo -> . REAL

    MOVE_TO         shift and go to state 13
    WAIT_MOTION     shift and go to state 14
    START_RECORD    shift and go to state 15
    STOP_RECORD     shift and go to state 16
    LIGHT_ON        shift and go to state 17
    LIGHT_OFF       shift and go to state 18
    ALARM_ON        shift and go to state 19
    ALARM_OFF       shift and go to state 20
    SENSOR_PIR      shift and go to state 21
    STOP            shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27
    STG             shift and go to state 28
    REAL            shift and go to state 29

    lista_declaraciones            shift and go to state 7
    declaracion                    shift and go to state 8
    si                             shift and go to state 9
    mientras                       shift and go to state 10
    for_loop                       shift and go to state 11
    tipo                           shift and go to state 12

state 5

    (1) programa -> bloque_codigo END .

    $end            reduce using rule 1 (programa -> bloque_codigo END .)


state 6

    (2) programa -> BEGIN bloque_codigo . END
    (3) programa -> BEGIN bloque_codigo .

    END             shift and go to state 30
    $end            reduce using rule 3 (programa -> BEGIN bloque_codigo .)


state 7

    (4) bloque_codigo -> LLAVE_A lista_declaraciones . LLAVE_C
    (5) bloque_codigo -> LLAVE_A lista_declaraciones .
    (6) lista_declaraciones -> lista_declaraciones . declaracion
    (7) lista_declaraciones -> lista_declaraciones . si
    (8) lista_declaraciones -> lista_declaraciones . mientras
    (9) lista_declaraciones -> lista_declaraciones . for_loop
    (14) declaracion -> . tipo ID ASIGNACION expresion PUNTOCOMA
    (15) declaracion -> . tipo ID ASIGNACION PUNTOCOMA
    (16) declaracion -> . tipo ID ASIGNACION expresion
    (49) declaracion -> . MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA
    (50) declaracion -> . MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA
    (51) declaracion -> . MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA
    (52) declaracion -> . MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA
    (53) declaracion -> . MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B
    (54) declaracion -> . MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (55) declaracion -> . MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA
    (56) declaracion -> . MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA
    (57) declaracion -> . MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA
    (58) declaracion -> . MOVE_TO NUMERO COMA NUMERO PUNTOCOMA
    (59) declaracion -> . WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (60) declaracion -> . WAIT_MOTION PUNTOCOMA
    (61) declaracion -> . WAIT_MOTION PARENTESIS_A PARENTESIS_B
    (62) declaracion -> . START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (63) declaracion -> . STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (64) declaracion -> . START_RECORD PARENTESIS_A PARENTESIS_B
    (65) declaracion -> . STOP_RECORD PARENTESIS_A PARENTESIS_B
    (66) declaracion -> . START_RECORD PUNTOCOMA
    (67) declaracion -> . STOP_RECORD PUNTOCOMA
    (68) declaracion -> . START_RECORD PARENTESIS_A PUNTOCOMA
    (69) declaracion -> . START_RECORD PARENTESIS_B PUNTOCOMA
    (70) declaracion -> . STOP_RECORD PARENTESIS_A PUNTOCOMA
    (71) declaracion -> . STOP_RECORD PARENTESIS_B PUNTOCOMA
    (72) declaracion -> . LIGHT_ON PUNTOCOMA
    (73) declaracion -> . LIGHT_OFF PUNTOCOMA
    (74) declaracion -> . LIGHT_ON
    (75) declaracion -> . LIGHT_OFF
    (76) declaracion -> . ALARM_ON PUNTOCOMA
    (77) declaracion -> . ALARM_OFF PUNTOCOMA
    (78) declaracion -> . ALARM_ON
    (79) declaracion -> . ALARM_OFF
    (80) declaracion -> . SENSOR_PIR PUNTOCOMA
    (81) declaracion -> . SENSOR_PIR
    (82) declaracion -> . STOP PUNTOCOMA
    (83) declaracion -> . STOP
    (38) si -> . IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo
    (39) si -> . IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo
    (40) mientras -> . WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo
    (41) mientras -> . WHILE expresion bloque_codigo
    (42) for_loop -> . FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo
    (17) tipo -> . INT
    (18) tipo -> . BOOL
    (19) tipo -> . STG
    (20) tipo -> . REAL

  ! shift/reduce conflict for LLAVE_C resolved as shift
  ! shift/reduce conflict for MOVE_TO resolved as shift
  ! shift/reduce conflict for WAIT_MOTION resolved as shift
  ! shift/reduce conflict for START_RECORD resolved as shift
  ! shift/reduce conflict for STOP_RECORD resolved as shift
  ! shift/reduce conflict for LIGHT_ON resolved as shift
  ! shift/reduce conflict for LIGHT_OFF resolved as shift
  ! shift/reduce conflict for ALARM_ON resolved as shift
  ! shift/reduce conflict for ALARM_OFF resolved as shift
  ! shift/reduce conflict for SENSOR_PIR resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STG resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
    LLAVE_C         shift and go to state 31
    END             reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .)
    $end            reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .)
    ELSE            reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .)
    MOVE_TO         shift and go to state 13
    WAIT_MOTION     shift and go to state 14
    START_RECORD    shift and go to state 15
    STOP_RECORD     shift and go to state 16
    LIGHT_ON        shift and go to state 17
    LIGHT_OFF       shift and go to state 18
    ALARM_ON        shift and go to state 19
    ALARM_OFF       shift and go to state 20
    SENSOR_PIR      shift and go to state 21
    STOP            shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27
    STG             shift and go to state 28
    REAL            shift and go to state 29

  ! LLAVE_C         [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! MOVE_TO         [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! WAIT_MOTION     [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! START_RECORD    [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! STOP_RECORD     [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! LIGHT_ON        [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! LIGHT_OFF       [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! ALARM_ON        [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! ALARM_OFF       [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! SENSOR_PIR      [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! STOP            [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! IF              [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! WHILE           [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! FOR             [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! INT             [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! BOOL            [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! STG             [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]
  ! REAL            [ reduce using rule 5 (bloque_codigo -> LLAVE_A lista_declaraciones .) ]

    declaracion                    shift and go to state 32
    si                             shift and go to state 33
    mientras                       shift and go to state 34
    for_loop                       shift and go to state 35
    tipo                           shift and go to state 12

state 8

    (10) lista_declaraciones -> declaracion .

    LLAVE_C         reduce using rule 10 (lista_declaraciones -> declaracion .)
    MOVE_TO         reduce using rule 10 (lista_declaraciones -> declaracion .)
    WAIT_MOTION     reduce using rule 10 (lista_declaraciones -> declaracion .)
    START_RECORD    reduce using rule 10 (lista_declaraciones -> declaracion .)
    STOP_RECORD     reduce using rule 10 (lista_declaraciones -> declaracion .)
    LIGHT_ON        reduce using rule 10 (lista_declaraciones -> declaracion .)
    LIGHT_OFF       reduce using rule 10 (lista_declaraciones -> declaracion .)
    ALARM_ON        reduce using rule 10 (lista_declaraciones -> declaracion .)
    ALARM_OFF       reduce using rule 10 (lista_declaraciones -> declaracion .)
    SENSOR_PIR      reduce using rule 10 (lista_declaraciones -> declaracion .)
    STOP            reduce using rule 10 (lista_declaraciones -> declaracion .)
    IF              reduce using rule 10 (lista_declaraciones -> declaracion .)
    WHILE           reduce using rule 10 (lista_declaraciones -> declaracion .)
    FOR             reduce using rule 10 (lista_declaraciones -> declaracion .)
    INT             reduce using rule 10 (lista_declaraciones -> declaracion .)
    BOOL            reduce using rule 10 (lista_declaraciones -> declaracion .)
    STG             reduce using rule 10 (lista_declaraciones -> declaracion .)
    REAL            reduce using rule 10 (lista_declaraciones -> declaracion .)
    END             reduce using rule 10 (lista_declaraciones -> declaracion .)
    $end            reduce using rule 10 (lista_declaraciones -> declaracion .)
    ELSE            reduce using rule 10 (lista_declaraciones -> declaracion .)


state 9

    (11) lista_declaraciones -> si .

    LLAVE_C         reduce using rule 11 (lista_declaraciones -> si .)
    MOVE_TO         reduce using rule 11 (lista_declaraciones -> si .)
    WAIT_MOTION     reduce using rule 11 (lista_declaraciones -> si .)
    START_RECORD    reduce using rule 11 (lista_declaraciones -> si .)
    STOP_RECORD     reduce using rule 11 (lista_declaraciones -> si .)
    LIGHT_ON        reduce using rule 11 (lista_declaraciones -> si .)
    LIGHT_OFF       reduce using rule 11 (lista_declaraciones -> si .)
    ALARM_ON        reduce using rule 11 (lista_declaraciones -> si .)
    ALARM_OFF       reduce using rule 11 (lista_declaraciones -> si .)
    SENSOR_PIR      reduce using rule 11 (lista_declaraciones -> si .)
    STOP            reduce using rule 11 (lista_declaraciones -> si .)
    IF              reduce using rule 11 (lista_declaraciones -> si .)
    WHILE           reduce using rule 11 (lista_declaraciones -> si .)
    FOR             reduce using rule 11 (lista_declaraciones -> si .)
    INT             reduce using rule 11 (lista_declaraciones -> si .)
    BOOL            reduce using rule 11 (lista_declaraciones -> si .)
    STG             reduce using rule 11 (lista_declaraciones -> si .)
    REAL            reduce using rule 11 (lista_declaraciones -> si .)
    END             reduce using rule 11 (lista_declaraciones -> si .)
    $end            reduce using rule 11 (lista_declaraciones -> si .)
    ELSE            reduce using rule 11 (lista_declaraciones -> si .)


state 10

    (12) lista_declaraciones -> mientras .

    LLAVE_C         reduce using rule 12 (lista_declaraciones -> mientras .)
    MOVE_TO         reduce using rule 12 (lista_declaraciones -> mientras .)
    WAIT_MOTION     reduce using rule 12 (lista_declaraciones -> mientras .)
    START_RECORD    reduce using rule 12 (lista_declaraciones -> mientras .)
    STOP_RECORD     reduce using rule 12 (lista_declaraciones -> mientras .)
    LIGHT_ON        reduce using rule 12 (lista_declaraciones -> mientras .)
    LIGHT_OFF       reduce using rule 12 (lista_declaraciones -> mientras .)
    ALARM_ON        reduce using rule 12 (lista_declaraciones -> mientras .)
    ALARM_OFF       reduce using rule 12 (lista_declaraciones -> mientras .)
    SENSOR_PIR      reduce using rule 12 (lista_declaraciones -> mientras .)
    STOP            reduce using rule 12 (lista_declaraciones -> mientras .)
    IF              reduce using rule 12 (lista_declaraciones -> mientras .)
    WHILE           reduce using rule 12 (lista_declaraciones -> mientras .)
    FOR             reduce using rule 12 (lista_declaraciones -> mientras .)
    INT             reduce using rule 12 (lista_declaraciones -> mientras .)
    BOOL            reduce using rule 12 (lista_declaraciones -> mientras .)
    STG             reduce using rule 12 (lista_declaraciones -> mientras .)
    REAL            reduce using rule 12 (lista_declaraciones -> mientras .)
    END             reduce using rule 12 (lista_declaraciones -> mientras .)
    $end            reduce using rule 12 (lista_declaraciones -> mientras .)
    ELSE            reduce using rule 12 (lista_declaraciones -> mientras .)


state 11

    (13) lista_declaraciones -> for_loop .

    LLAVE_C         reduce using rule 13 (lista_declaraciones -> for_loop .)
    MOVE_TO         reduce using rule 13 (lista_declaraciones -> for_loop .)
    WAIT_MOTION     reduce using rule 13 (lista_declaraciones -> for_loop .)
    START_RECORD    reduce using rule 13 (lista_declaraciones -> for_loop .)
    STOP_RECORD     reduce using rule 13 (lista_declaraciones -> for_loop .)
    LIGHT_ON        reduce using rule 13 (lista_declaraciones -> for_loop .)
    LIGHT_OFF       reduce using rule 13 (lista_declaraciones -> for_loop .)
    ALARM_ON        reduce using rule 13 (lista_declaraciones -> for_loop .)
    ALARM_OFF       reduce using rule 13 (lista_declaraciones -> for_loop .)
    SENSOR_PIR      reduce using rule 13 (lista_declaraciones -> for_loop .)
    STOP            reduce using rule 13 (lista_declaraciones -> for_loop .)
    IF              reduce using rule 13 (lista_declaraciones -> for_loop .)
    WHILE           reduce using rule 13 (lista_declaraciones -> for_loop .)
    FOR             reduce using rule 13 (lista_declaraciones -> for_loop .)
    INT             reduce using rule 13 (lista_declaraciones -> for_loop .)
    BOOL            reduce using rule 13 (lista_declaraciones -> for_loop .)
    STG             reduce using rule 13 (lista_declaraciones -> for_loop .)
    REAL            reduce using rule 13 (lista_declaraciones -> for_loop .)
    END             reduce using rule 13 (lista_declaraciones -> for_loop .)
    $end            reduce using rule 13 (lista_declaraciones -> for_loop .)
    ELSE            reduce using rule 13 (lista_declaraciones -> for_loop .)


state 12

    (14) declaracion -> tipo . ID ASIGNACION expresion PUNTOCOMA
    (15) declaracion -> tipo . ID ASIGNACION PUNTOCOMA
    (16) declaracion -> tipo . ID ASIGNACION expresion

    ID              shift and go to state 36


state 13

    (49) declaracion -> MOVE_TO . PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA
    (50) declaracion -> MOVE_TO . PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA
    (51) declaracion -> MOVE_TO . PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA
    (52) declaracion -> MOVE_TO . PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA
    (53) declaracion -> MOVE_TO . PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B
    (54) declaracion -> MOVE_TO . PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (55) declaracion -> MOVE_TO . PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA
    (56) declaracion -> MOVE_TO . NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA
    (57) declaracion -> MOVE_TO . PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA
    (58) declaracion -> MOVE_TO . NUMERO COMA NUMERO PUNTOCOMA

    PARENTESIS_A    shift and go to state 37
    NUMERO          shift and go to state 38


state 14

    (59) declaracion -> WAIT_MOTION . PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (60) declaracion -> WAIT_MOTION . PUNTOCOMA
    (61) declaracion -> WAIT_MOTION . PARENTESIS_A PARENTESIS_B

    PARENTESIS_A    shift and go to state 39
    PUNTOCOMA       shift and go to state 40


state 15

    (62) declaracion -> START_RECORD . PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (64) declaracion -> START_RECORD . PARENTESIS_A PARENTESIS_B
    (66) declaracion -> START_RECORD . PUNTOCOMA
    (68) declaracion -> START_RECORD . PARENTESIS_A PUNTOCOMA
    (69) declaracion -> START_RECORD . PARENTESIS_B PUNTOCOMA

    PARENTESIS_A    shift and go to state 41
    PUNTOCOMA       shift and go to state 43
    PARENTESIS_B    shift and go to state 42


state 16

    (63) declaracion -> STOP_RECORD . PARENTESIS_A PARENTESIS_B PUNTOCOMA
    (65) declaracion -> STOP_RECORD . PARENTESIS_A PARENTESIS_B
    (67) declaracion -> STOP_RECORD . PUNTOCOMA
    (70) declaracion -> STOP_RECORD . PARENTESIS_A PUNTOCOMA
    (71) declaracion -> STOP_RECORD . PARENTESIS_B PUNTOCOMA

    PARENTESIS_A    shift and go to state 44
    PUNTOCOMA       shift and go to state 46
    PARENTESIS_B    shift and go to state 45


state 17

    (72) declaracion -> LIGHT_ON . PUNTOCOMA
    (74) declaracion -> LIGHT_ON .

    PUNTOCOMA       shift and go to state 47
    LLAVE_C         reduce using rule 74 (declaracion -> LIGHT_ON .)
    MOVE_TO         reduce using rule 74 (declaracion -> LIGHT_ON .)
    WAIT_MOTION     reduce using rule 74 (declaracion -> LIGHT_ON .)
    START_RECORD    reduce using rule 74 (declaracion -> LIGHT_ON .)
    STOP_RECORD     reduce using rule 74 (declaracion -> LIGHT_ON .)
    LIGHT_ON        reduce using rule 74 (declaracion -> LIGHT_ON .)
    LIGHT_OFF       reduce using rule 74 (declaracion -> LIGHT_ON .)
    ALARM_ON        reduce using rule 74 (declaracion -> LIGHT_ON .)
    ALARM_OFF       reduce using rule 74 (declaracion -> LIGHT_ON .)
    SENSOR_PIR      reduce using rule 74 (declaracion -> LIGHT_ON .)
    STOP            reduce using rule 74 (declaracion -> LIGHT_ON .)
    IF              reduce using rule 74 (declaracion -> LIGHT_ON .)
    WHILE           reduce using rule 74 (declaracion -> LIGHT_ON .)
    FOR             reduce using rule 74 (declaracion -> LIGHT_ON .)
    INT             reduce using rule 74 (declaracion -> LIGHT_ON .)
    BOOL            reduce using rule 74 (declaracion -> LIGHT_ON .)
    STG             reduce using rule 74 (declaracion -> LIGHT_ON .)
    REAL            reduce using rule 74 (declaracion -> LIGHT_ON .)
    END             reduce using rule 74 (declaracion -> LIGHT_ON .)
    $end            reduce using rule 74 (declaracion -> LIGHT_ON .)
    ELSE            reduce using rule 74 (declaracion -> LIGHT_ON .)


state 18

    (73) declaracion -> LIGHT_OFF . PUNTOCOMA
    (75) declaracion -> LIGHT_OFF .

    PUNTOCOMA       shift and go to state 48
    LLAVE_C         reduce using rule 75 (declaracion -> LIGHT_OFF .)
    MOVE_TO         reduce using rule 75 (declaracion -> LIGHT_OFF .)
    WAIT_MOTION     reduce using rule 75 (declaracion -> LIGHT_OFF .)
    START_RECORD    reduce using rule 75 (declaracion -> LIGHT_OFF .)
    STOP_RECORD     reduce using rule 75 (declaracion -> LIGHT_OFF .)
    LIGHT_ON        reduce using rule 75 (declaracion -> LIGHT_OFF .)
    LIGHT_OFF       reduce using rule 75 (declaracion -> LIGHT_OFF .)
    ALARM_ON        reduce using rule 75 (declaracion -> LIGHT_OFF .)
    ALARM_OFF       reduce using rule 75 (declaracion -> LIGHT_OFF .)
    SENSOR_PIR      reduce using rule 75 (declaracion -> LIGHT_OFF .)
    STOP            reduce using rule 75 (declaracion -> LIGHT_OFF .)
    IF              reduce using rule 75 (declaracion -> LIGHT_OFF .)
    WHILE           reduce using rule 75 (declaracion -> LIGHT_OFF .)
    FOR             reduce using rule 75 (declaracion -> LIGHT_OFF .)
    INT             reduce using rule 75 (declaracion -> LIGHT_OFF .)
    BOOL            reduce using rule 75 (declaracion -> LIGHT_OFF .)
    STG             reduce using rule 75 (declaracion -> LIGHT_OFF .)
    REAL            reduce using rule 75 (declaracion -> LIGHT_OFF .)
    END             reduce using rule 75 (declaracion -> LIGHT_OFF .)
    $end            reduce using rule 75 (declaracion -> LIGHT_OFF .)
    ELSE            reduce using rule 75 (declaracion -> LIGHT_OFF .)


state 19

    (76) declaracion -> ALARM_ON . PUNTOCOMA
    (78) declaracion -> ALARM_ON .

    PUNTOCOMA       shift and go to state 49
    LLAVE_C         reduce using rule 78 (declaracion -> ALARM_ON .)
    MOVE_TO         reduce using rule 78 (declaracion -> ALARM_ON .)
    WAIT_MOTION     reduce using rule 78 (declaracion -> ALARM_ON .)
    START_RECORD    reduce using rule 78 (declaracion -> ALARM_ON .)
    STOP_RECORD     reduce using rule 78 (declaracion -> ALARM_ON .)
    LIGHT_ON        reduce using rule 78 (declaracion -> ALARM_ON .)
    LIGHT_OFF       reduce using rule 78 (declaracion -> ALARM_ON .)
    ALARM_ON        reduce using rule 78 (declaracion -> ALARM_ON .)
    ALARM_OFF       reduce using rule 78 (declaracion -> ALARM_ON .)
    SENSOR_PIR      reduce using rule 78 (declaracion -> ALARM_ON .)
    STOP            reduce using rule 78 (declaracion -> ALARM_ON .)
    IF              reduce using rule 78 (declaracion -> ALARM_ON .)
    WHILE           reduce using rule 78 (declaracion -> ALARM_ON .)
    FOR             reduce using rule 78 (declaracion -> ALARM_ON .)
    INT             reduce using rule 78 (declaracion -> ALARM_ON .)
    BOOL            reduce using rule 78 (declaracion -> ALARM_ON .)
    STG             reduce using rule 78 (declaracion -> ALARM_ON .)
    REAL            reduce using rule 78 (declaracion -> ALARM_ON .)
    END             reduce using rule 78 (declaracion -> ALARM_ON .)
    $end            reduce using rule 78 (declaracion -> ALARM_ON .)
    ELSE            reduce using rule 78 (declaracion -> ALARM_ON .)


state 20

    (77) declaracion -> ALARM_OFF . PUNTOCOMA
    (79) declaracion -> ALARM_OFF .

    PUNTOCOMA       shift and go to state 50
    LLAVE_C         reduce using rule 79 (declaracion -> ALARM_OFF .)
    MOVE_TO         reduce using rule 79 (declaracion -> ALARM_OFF .)
    WAIT_MOTION     reduce using rule 79 (declaracion -> ALARM_OFF .)
    START_RECORD    reduce using rule 79 (declaracion -> ALARM_OFF .)
    STOP_RECORD     reduce using rule 79 (declaracion -> ALARM_OFF .)
    LIGHT_ON        reduce using rule 79 (declaracion -> ALARM_OFF .)
    LIGHT_OFF       reduce using rule 79 (declaracion -> ALARM_OFF .)
    ALARM_ON        reduce using rule 79 (declaracion -> ALARM_OFF .)
    ALARM_OFF       reduce using rule 79 (declaracion -> ALARM_OFF .)
    SENSOR_PIR      reduce using rule 79 (declaracion -> ALARM_OFF .)
    STOP            reduce using rule 79 (declaracion -> ALARM_OFF .)
    IF              reduce using rule 79 (declaracion -> ALARM_OFF .)
    WHILE           reduce using rule 79 (declaracion -> ALARM_OFF .)
    FOR             reduce using rule 79 (declaracion -> ALARM_OFF .)
    INT             reduce using rule 79 (declaracion -> ALARM_OFF .)
    BOOL            reduce using rule 79 (declaracion -> ALARM_OFF .)
    STG             reduce using rule 79 (declaracion -> ALARM_OFF .)
    REAL            reduce using rule 79 (declaracion -> ALARM_OFF .)
    END             reduce using rule 79 (declaracion -> ALARM_OFF .)
    $end            reduce using rule 79 (declaracion -> ALARM_OFF .)
    ELSE            reduce using rule 79 (declaracion -> ALARM_OFF .)


state 21

    (80) declaracion -> SENSOR_PIR . PUNTOCOMA
    (81) declaracion -> SENSOR_PIR .

    PUNTOCOMA       shift and go to state 51
    LLAVE_C         reduce using rule 81 (declaracion -> SENSOR_PIR .)
    MOVE_TO         reduce using rule 81 (declaracion -> SENSOR_PIR .)
    WAIT_MOTION     reduce using rule 81 (declaracion -> SENSOR_PIR .)
    START_RECORD    reduce using rule 81 (declaracion -> SENSOR_PIR .)
    STOP_RECORD     reduce using rule 81 (declaracion -> SENSOR_PIR .)
    LIGHT_ON        reduce using rule 81 (declaracion -> SENSOR_PIR .)
    LIGHT_OFF       reduce using rule 81 (declaracion -> SENSOR_PIR .)
    ALARM_ON        reduce using rule 81 (declaracion -> SENSOR_PIR .)
    ALARM_OFF       reduce using rule 81 (declaracion -> SENSOR_PIR .)
    SENSOR_PIR      reduce using rule 81 (declaracion -> SENSOR_PIR .)
    STOP            reduce using rule 81 (declaracion -> SENSOR_PIR .)
    IF              reduce using rule 81 (declaracion -> SENSOR_PIR .)
    WHILE           reduce using rule 81 (declaracion -> SENSOR_PIR .)
    FOR             reduce using rule 81 (declaracion -> SENSOR_PIR .)
    INT             reduce using rule 81 (declaracion -> SENSOR_PIR .)
    BOOL            reduce using rule 81 (declaracion -> SENSOR_PIR .)
    STG             reduce using rule 81 (declaracion -> SENSOR_PIR .)
    REAL            reduce using rule 81 (declaracion -> SENSOR_PIR .)
    END             reduce using rule 81 (declaracion -> SENSOR_PIR .)
    $end            reduce using rule 81 (declaracion -> SENSOR_PIR .)
    ELSE            reduce using rule 81 (declaracion -> SENSOR_PIR .)


state 22

    (82) declaracion -> STOP . PUNTOCOMA
    (83) declaracion -> STOP .

    PUNTOCOMA       shift and go to state 52
    LLAVE_C         reduce using rule 83 (declaracion -> STOP .)
    MOVE_TO         reduce using rule 83 (declaracion -> STOP .)
    WAIT_MOTION     reduce using rule 83 (declaracion -> STOP .)
    START_RECORD    reduce using rule 83 (declaracion -> STOP .)
    STOP_RECORD     reduce using rule 83 (declaracion -> STOP .)
    LIGHT_ON        reduce using rule 83 (declaracion -> STOP .)
    LIGHT_OFF       reduce using rule 83 (declaracion -> STOP .)
    ALARM_ON        reduce using rule 83 (declaracion -> STOP .)
    ALARM_OFF       reduce using rule 83 (declaracion -> STOP .)
    SENSOR_PIR      reduce using rule 83 (declaracion -> STOP .)
    STOP            reduce using rule 83 (declaracion -> STOP .)
    IF              reduce using rule 83 (declaracion -> STOP .)
    WHILE           reduce using rule 83 (declaracion -> STOP .)
    FOR             reduce using rule 83 (declaracion -> STOP .)
    INT             reduce using rule 83 (declaracion -> STOP .)
    BOOL            reduce using rule 83 (declaracion -> STOP .)
    STG             reduce using rule 83 (declaracion -> STOP .)
    REAL            reduce using rule 83 (declaracion -> STOP .)
    END             reduce using rule 83 (declaracion -> STOP .)
    $end            reduce using rule 83 (declaracion -> STOP .)
    ELSE            reduce using rule 83 (declaracion -> STOP .)


state 23

    (38) si -> IF . PARENTESIS_A expresion PARENTESIS_B bloque_codigo
    (39) si -> IF . PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo

    PARENTESIS_A    shift and go to state 53


state 24

    (40) mientras -> WHILE . PARENTESIS_A expresion PARENTESIS_B bloque_codigo
    (41) mientras -> WHILE . expresion bloque_codigo
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    PARENTESIS_A    shift and go to state 54
    ID              shift and go to state 56
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 55

state 25

    (42) for_loop -> FOR . PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo

    PARENTESIS_A    shift and go to state 62


state 26

    (17) tipo -> INT .

    ID              reduce using rule 17 (tipo -> INT .)


state 27

    (18) tipo -> BOOL .

    ID              reduce using rule 18 (tipo -> BOOL .)


state 28

    (19) tipo -> STG .

    ID              reduce using rule 19 (tipo -> STG .)


state 29

    (20) tipo -> REAL .

    ID              reduce using rule 20 (tipo -> REAL .)


state 30

    (2) programa -> BEGIN bloque_codigo END .

    $end            reduce using rule 2 (programa -> BEGIN bloque_codigo END .)


state 31

    (4) bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .

    END             reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    $end            reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    LLAVE_C         reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    MOVE_TO         reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    WAIT_MOTION     reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    START_RECORD    reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    STOP_RECORD     reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    LIGHT_ON        reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    LIGHT_OFF       reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    ALARM_ON        reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    ALARM_OFF       reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    SENSOR_PIR      reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    STOP            reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    IF              reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    WHILE           reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    FOR             reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    INT             reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    BOOL            reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    STG             reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    REAL            reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)
    ELSE            reduce using rule 4 (bloque_codigo -> LLAVE_A lista_declaraciones LLAVE_C .)


state 32

    (6) lista_declaraciones -> lista_declaraciones declaracion .

    LLAVE_C         reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    MOVE_TO         reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    WAIT_MOTION     reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    START_RECORD    reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    STOP_RECORD     reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    LIGHT_ON        reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    LIGHT_OFF       reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    ALARM_ON        reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    ALARM_OFF       reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    SENSOR_PIR      reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    STOP            reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    IF              reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    WHILE           reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    FOR             reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    INT             reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    BOOL            reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    STG             reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    REAL            reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    END             reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    $end            reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)
    ELSE            reduce using rule 6 (lista_declaraciones -> lista_declaraciones declaracion .)


state 33

    (7) lista_declaraciones -> lista_declaraciones si .

    LLAVE_C         reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    MOVE_TO         reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    WAIT_MOTION     reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    START_RECORD    reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    STOP_RECORD     reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    LIGHT_ON        reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    LIGHT_OFF       reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    ALARM_ON        reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    ALARM_OFF       reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    SENSOR_PIR      reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    STOP            reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    IF              reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    WHILE           reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    FOR             reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    INT             reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    BOOL            reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    STG             reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    REAL            reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    END             reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    $end            reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)
    ELSE            reduce using rule 7 (lista_declaraciones -> lista_declaraciones si .)


state 34

    (8) lista_declaraciones -> lista_declaraciones mientras .

    LLAVE_C         reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    MOVE_TO         reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    WAIT_MOTION     reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    START_RECORD    reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    STOP_RECORD     reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    LIGHT_ON        reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    LIGHT_OFF       reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    ALARM_ON        reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    ALARM_OFF       reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    SENSOR_PIR      reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    STOP            reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    IF              reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    WHILE           reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    FOR             reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    INT             reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    BOOL            reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    STG             reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    REAL            reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    END             reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    $end            reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)
    ELSE            reduce using rule 8 (lista_declaraciones -> lista_declaraciones mientras .)


state 35

    (9) lista_declaraciones -> lista_declaraciones for_loop .

    LLAVE_C         reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    MOVE_TO         reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    WAIT_MOTION     reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    START_RECORD    reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    STOP_RECORD     reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    LIGHT_ON        reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    LIGHT_OFF       reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    ALARM_ON        reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    ALARM_OFF       reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    SENSOR_PIR      reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    STOP            reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    IF              reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    WHILE           reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    FOR             reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    INT             reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    BOOL            reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    STG             reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    REAL            reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    END             reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    $end            reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)
    ELSE            reduce using rule 9 (lista_declaraciones -> lista_declaraciones for_loop .)


state 36

    (14) declaracion -> tipo ID . ASIGNACION expresion PUNTOCOMA
    (15) declaracion -> tipo ID . ASIGNACION PUNTOCOMA
    (16) declaracion -> tipo ID . ASIGNACION expresion

    ASIGNACION      shift and go to state 63


state 37

    (49) declaracion -> MOVE_TO PARENTESIS_A . NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA
    (50) declaracion -> MOVE_TO PARENTESIS_A . NUMERO COMA PARENTESIS_B PUNTOCOMA
    (51) declaracion -> MOVE_TO PARENTESIS_A . COMA NUMERO PARENTESIS_B PUNTOCOMA
    (52) declaracion -> MOVE_TO PARENTESIS_A . NUMERO NUMERO PARENTESIS_B PUNTOCOMA
    (53) declaracion -> MOVE_TO PARENTESIS_A . NUMERO COMA NUMERO PARENTESIS_B
    (54) declaracion -> MOVE_TO PARENTESIS_A . PARENTESIS_B PUNTOCOMA
    (55) declaracion -> MOVE_TO PARENTESIS_A . NUMERO PARENTESIS_B PUNTOCOMA
    (57) declaracion -> MOVE_TO PARENTESIS_A . NUMERO COMA NUMERO PUNTOCOMA

    NUMERO          shift and go to state 64
    COMA            shift and go to state 65
    PARENTESIS_B    shift and go to state 66


state 38

    (56) declaracion -> MOVE_TO NUMERO . COMA NUMERO PARENTESIS_B PUNTOCOMA
    (58) declaracion -> MOVE_TO NUMERO . COMA NUMERO PUNTOCOMA

    COMA            shift and go to state 67


state 39

    (59) declaracion -> WAIT_MOTION PARENTESIS_A . PARENTESIS_B PUNTOCOMA
    (61) declaracion -> WAIT_MOTION PARENTESIS_A . PARENTESIS_B

    PARENTESIS_B    shift and go to state 68


state 40

    (60) declaracion -> WAIT_MOTION PUNTOCOMA .

    LLAVE_C         reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    MOVE_TO         reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    START_RECORD    reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    STOP_RECORD     reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    LIGHT_ON        reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    ALARM_ON        reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    ALARM_OFF       reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    STOP            reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    IF              reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    WHILE           reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    FOR             reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    INT             reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    BOOL            reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    STG             reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    REAL            reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    END             reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    $end            reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)
    ELSE            reduce using rule 60 (declaracion -> WAIT_MOTION PUNTOCOMA .)


state 41

    (62) declaracion -> START_RECORD PARENTESIS_A . PARENTESIS_B PUNTOCOMA
    (64) declaracion -> START_RECORD PARENTESIS_A . PARENTESIS_B
    (68) declaracion -> START_RECORD PARENTESIS_A . PUNTOCOMA

    PARENTESIS_B    shift and go to state 69
    PUNTOCOMA       shift and go to state 70


state 42

    (69) declaracion -> START_RECORD PARENTESIS_B . PUNTOCOMA

    PUNTOCOMA       shift and go to state 71


state 43

    (66) declaracion -> START_RECORD PUNTOCOMA .

    LLAVE_C         reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    MOVE_TO         reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    START_RECORD    reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    STOP_RECORD     reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    LIGHT_ON        reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    ALARM_ON        reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    ALARM_OFF       reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    STOP            reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    IF              reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    WHILE           reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    FOR             reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    INT             reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    BOOL            reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    STG             reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    REAL            reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    END             reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    $end            reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)
    ELSE            reduce using rule 66 (declaracion -> START_RECORD PUNTOCOMA .)


state 44

    (63) declaracion -> STOP_RECORD PARENTESIS_A . PARENTESIS_B PUNTOCOMA
    (65) declaracion -> STOP_RECORD PARENTESIS_A . PARENTESIS_B
    (70) declaracion -> STOP_RECORD PARENTESIS_A . PUNTOCOMA

    PARENTESIS_B    shift and go to state 72
    PUNTOCOMA       shift and go to state 73


state 45

    (71) declaracion -> STOP_RECORD PARENTESIS_B . PUNTOCOMA

    PUNTOCOMA       shift and go to state 74


state 46

    (67) declaracion -> STOP_RECORD PUNTOCOMA .

    LLAVE_C         reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    MOVE_TO         reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    START_RECORD    reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    STOP_RECORD     reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    LIGHT_ON        reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    ALARM_ON        reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    ALARM_OFF       reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    STOP            reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    IF              reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    WHILE           reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    FOR             reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    INT             reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    BOOL            reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    STG             reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    REAL            reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    END             reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    $end            reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)
    ELSE            reduce using rule 67 (declaracion -> STOP_RECORD PUNTOCOMA .)


state 47

    (72) declaracion -> LIGHT_ON PUNTOCOMA .

    LLAVE_C         reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    MOVE_TO         reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    START_RECORD    reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    STOP_RECORD     reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    LIGHT_ON        reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    ALARM_ON        reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    ALARM_OFF       reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    STOP            reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    IF              reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    WHILE           reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    FOR             reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    INT             reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    BOOL            reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    STG             reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    REAL            reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    END             reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    $end            reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)
    ELSE            reduce using rule 72 (declaracion -> LIGHT_ON PUNTOCOMA .)


state 48

    (73) declaracion -> LIGHT_OFF PUNTOCOMA .

    LLAVE_C         reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    MOVE_TO         reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    START_RECORD    reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    STOP_RECORD     reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    LIGHT_ON        reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    ALARM_ON        reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    ALARM_OFF       reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    STOP            reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    IF              reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    WHILE           reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    FOR             reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    INT             reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    BOOL            reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    STG             reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    REAL            reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    END             reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    $end            reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)
    ELSE            reduce using rule 73 (declaracion -> LIGHT_OFF PUNTOCOMA .)


state 49

    (76) declaracion -> ALARM_ON PUNTOCOMA .

    LLAVE_C         reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    MOVE_TO         reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    START_RECORD    reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    STOP_RECORD     reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    LIGHT_ON        reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    ALARM_ON        reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    ALARM_OFF       reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    STOP            reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    IF              reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    WHILE           reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    FOR             reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    INT             reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    BOOL            reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    STG             reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    REAL            reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    END             reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    $end            reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)
    ELSE            reduce using rule 76 (declaracion -> ALARM_ON PUNTOCOMA .)


state 50

    (77) declaracion -> ALARM_OFF PUNTOCOMA .

    LLAVE_C         reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    MOVE_TO         reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    START_RECORD    reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    STOP_RECORD     reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    LIGHT_ON        reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    ALARM_ON        reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    ALARM_OFF       reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    STOP            reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    IF              reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    WHILE           reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    FOR             reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    INT             reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    BOOL            reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    STG             reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    REAL            reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    END             reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    $end            reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)
    ELSE            reduce using rule 77 (declaracion -> ALARM_OFF PUNTOCOMA .)


state 51

    (80) declaracion -> SENSOR_PIR PUNTOCOMA .

    LLAVE_C         reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    MOVE_TO         reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    START_RECORD    reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    STOP_RECORD     reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    LIGHT_ON        reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    ALARM_ON        reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    ALARM_OFF       reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    STOP            reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    IF              reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    WHILE           reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    FOR             reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    INT             reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    BOOL            reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    STG             reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    REAL            reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    END             reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    $end            reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)
    ELSE            reduce using rule 80 (declaracion -> SENSOR_PIR PUNTOCOMA .)


state 52

    (82) declaracion -> STOP PUNTOCOMA .

    LLAVE_C         reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    MOVE_TO         reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    START_RECORD    reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    STOP_RECORD     reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    LIGHT_ON        reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    ALARM_ON        reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    ALARM_OFF       reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    STOP            reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    IF              reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    WHILE           reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    FOR             reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    INT             reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    BOOL            reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    STG             reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    REAL            reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    END             reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    $end            reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)
    ELSE            reduce using rule 82 (declaracion -> STOP PUNTOCOMA .)


state 53

    (38) si -> IF PARENTESIS_A . expresion PARENTESIS_B bloque_codigo
    (39) si -> IF PARENTESIS_A . expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 76

state 54

    (40) mientras -> WHILE PARENTESIS_A . expresion PARENTESIS_B bloque_codigo
    (32) expresion -> PARENTESIS_A . expresion PARENTESIS_B
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 77

state 55

    (41) mientras -> WHILE expresion . bloque_codigo
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion
    (4) bloque_codigo -> . LLAVE_A lista_declaraciones LLAVE_C
    (5) bloque_codigo -> . LLAVE_A lista_declaraciones

    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86
    IGUAL           shift and go to state 87
    DIFERENTE       shift and go to state 88
    LLAVE_A         shift and go to state 4

    bloque_codigo                  shift and go to state 78

state 56

    (21) expresion -> ID .

    SUMA            reduce using rule 21 (expresion -> ID .)
    RESTA           reduce using rule 21 (expresion -> ID .)
    MULTIPLICACION  reduce using rule 21 (expresion -> ID .)
    DIVISION        reduce using rule 21 (expresion -> ID .)
    MENORQUE        reduce using rule 21 (expresion -> ID .)
    MENORIGUAL      reduce using rule 21 (expresion -> ID .)
    MAYORQUE        reduce using rule 21 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 21 (expresion -> ID .)
    IGUAL           reduce using rule 21 (expresion -> ID .)
    DIFERENTE       reduce using rule 21 (expresion -> ID .)
    LLAVE_A         reduce using rule 21 (expresion -> ID .)
    PARENTESIS_B    reduce using rule 21 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 21 (expresion -> ID .)
    LLAVE_C         reduce using rule 21 (expresion -> ID .)
    MOVE_TO         reduce using rule 21 (expresion -> ID .)
    WAIT_MOTION     reduce using rule 21 (expresion -> ID .)
    START_RECORD    reduce using rule 21 (expresion -> ID .)
    STOP_RECORD     reduce using rule 21 (expresion -> ID .)
    LIGHT_ON        reduce using rule 21 (expresion -> ID .)
    LIGHT_OFF       reduce using rule 21 (expresion -> ID .)
    ALARM_ON        reduce using rule 21 (expresion -> ID .)
    ALARM_OFF       reduce using rule 21 (expresion -> ID .)
    SENSOR_PIR      reduce using rule 21 (expresion -> ID .)
    STOP            reduce using rule 21 (expresion -> ID .)
    IF              reduce using rule 21 (expresion -> ID .)
    WHILE           reduce using rule 21 (expresion -> ID .)
    FOR             reduce using rule 21 (expresion -> ID .)
    INT             reduce using rule 21 (expresion -> ID .)
    BOOL            reduce using rule 21 (expresion -> ID .)
    STG             reduce using rule 21 (expresion -> ID .)
    REAL            reduce using rule 21 (expresion -> ID .)
    END             reduce using rule 21 (expresion -> ID .)
    $end            reduce using rule 21 (expresion -> ID .)
    ELSE            reduce using rule 21 (expresion -> ID .)


state 57

    (33) expresion -> NUMERO .

    SUMA            reduce using rule 33 (expresion -> NUMERO .)
    RESTA           reduce using rule 33 (expresion -> NUMERO .)
    MULTIPLICACION  reduce using rule 33 (expresion -> NUMERO .)
    DIVISION        reduce using rule 33 (expresion -> NUMERO .)
    MENORQUE        reduce using rule 33 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 33 (expresion -> NUMERO .)
    MAYORQUE        reduce using rule 33 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 33 (expresion -> NUMERO .)
    IGUAL           reduce using rule 33 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 33 (expresion -> NUMERO .)
    LLAVE_A         reduce using rule 33 (expresion -> NUMERO .)
    PARENTESIS_B    reduce using rule 33 (expresion -> NUMERO .)
    PUNTOCOMA       reduce using rule 33 (expresion -> NUMERO .)
    LLAVE_C         reduce using rule 33 (expresion -> NUMERO .)
    MOVE_TO         reduce using rule 33 (expresion -> NUMERO .)
    WAIT_MOTION     reduce using rule 33 (expresion -> NUMERO .)
    START_RECORD    reduce using rule 33 (expresion -> NUMERO .)
    STOP_RECORD     reduce using rule 33 (expresion -> NUMERO .)
    LIGHT_ON        reduce using rule 33 (expresion -> NUMERO .)
    LIGHT_OFF       reduce using rule 33 (expresion -> NUMERO .)
    ALARM_ON        reduce using rule 33 (expresion -> NUMERO .)
    ALARM_OFF       reduce using rule 33 (expresion -> NUMERO .)
    SENSOR_PIR      reduce using rule 33 (expresion -> NUMERO .)
    STOP            reduce using rule 33 (expresion -> NUMERO .)
    IF              reduce using rule 33 (expresion -> NUMERO .)
    WHILE           reduce using rule 33 (expresion -> NUMERO .)
    FOR             reduce using rule 33 (expresion -> NUMERO .)
    INT             reduce using rule 33 (expresion -> NUMERO .)
    BOOL            reduce using rule 33 (expresion -> NUMERO .)
    STG             reduce using rule 33 (expresion -> NUMERO .)
    REAL            reduce using rule 33 (expresion -> NUMERO .)
    END             reduce using rule 33 (expresion -> NUMERO .)
    $end            reduce using rule 33 (expresion -> NUMERO .)
    ELSE            reduce using rule 33 (expresion -> NUMERO .)


state 58

    (34) expresion -> REAL_LIT .

    SUMA            reduce using rule 34 (expresion -> REAL_LIT .)
    RESTA           reduce using rule 34 (expresion -> REAL_LIT .)
    MULTIPLICACION  reduce using rule 34 (expresion -> REAL_LIT .)
    DIVISION        reduce using rule 34 (expresion -> REAL_LIT .)
    MENORQUE        reduce using rule 34 (expresion -> REAL_LIT .)
    MENORIGUAL      reduce using rule 34 (expresion -> REAL_LIT .)
    MAYORQUE        reduce using rule 34 (expresion -> REAL_LIT .)
    MAYORIGUAL      reduce using rule 34 (expresion -> REAL_LIT .)
    IGUAL           reduce using rule 34 (expresion -> REAL_LIT .)
    DIFERENTE       reduce using rule 34 (expresion -> REAL_LIT .)
    LLAVE_A         reduce using rule 34 (expresion -> REAL_LIT .)
    PARENTESIS_B    reduce using rule 34 (expresion -> REAL_LIT .)
    PUNTOCOMA       reduce using rule 34 (expresion -> REAL_LIT .)
    LLAVE_C         reduce using rule 34 (expresion -> REAL_LIT .)
    MOVE_TO         reduce using rule 34 (expresion -> REAL_LIT .)
    WAIT_MOTION     reduce using rule 34 (expresion -> REAL_LIT .)
    START_RECORD    reduce using rule 34 (expresion -> REAL_LIT .)
    STOP_RECORD     reduce using rule 34 (expresion -> REAL_LIT .)
    LIGHT_ON        reduce using rule 34 (expresion -> REAL_LIT .)
    LIGHT_OFF       reduce using rule 34 (expresion -> REAL_LIT .)
    ALARM_ON        reduce using rule 34 (expresion -> REAL_LIT .)
    ALARM_OFF       reduce using rule 34 (expresion -> REAL_LIT .)
    SENSOR_PIR      reduce using rule 34 (expresion -> REAL_LIT .)
    STOP            reduce using rule 34 (expresion -> REAL_LIT .)
    IF              reduce using rule 34 (expresion -> REAL_LIT .)
    WHILE           reduce using rule 34 (expresion -> REAL_LIT .)
    FOR             reduce using rule 34 (expresion -> REAL_LIT .)
    INT             reduce using rule 34 (expresion -> REAL_LIT .)
    BOOL            reduce using rule 34 (expresion -> REAL_LIT .)
    STG             reduce using rule 34 (expresion -> REAL_LIT .)
    REAL            reduce using rule 34 (expresion -> REAL_LIT .)
    END             reduce using rule 34 (expresion -> REAL_LIT .)
    $end            reduce using rule 34 (expresion -> REAL_LIT .)
    ELSE            reduce using rule 34 (expresion -> REAL_LIT .)


state 59

    (35) expresion -> CADENA .

    SUMA            reduce using rule 35 (expresion -> CADENA .)
    RESTA           reduce using rule 35 (expresion -> CADENA .)
    MULTIPLICACION  reduce using rule 35 (expresion -> CADENA .)
    DIVISION        reduce using rule 35 (expresion -> CADENA .)
    MENORQUE        reduce using rule 35 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 35 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 35 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 35 (expresion -> CADENA .)
    IGUAL           reduce using rule 35 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 35 (expresion -> CADENA .)
    LLAVE_A         reduce using rule 35 (expresion -> CADENA .)
    PARENTESIS_B    reduce using rule 35 (expresion -> CADENA .)
    PUNTOCOMA       reduce using rule 35 (expresion -> CADENA .)
    LLAVE_C         reduce using rule 35 (expresion -> CADENA .)
    MOVE_TO         reduce using rule 35 (expresion -> CADENA .)
    WAIT_MOTION     reduce using rule 35 (expresion -> CADENA .)
    START_RECORD    reduce using rule 35 (expresion -> CADENA .)
    STOP_RECORD     reduce using rule 35 (expresion -> CADENA .)
    LIGHT_ON        reduce using rule 35 (expresion -> CADENA .)
    LIGHT_OFF       reduce using rule 35 (expresion -> CADENA .)
    ALARM_ON        reduce using rule 35 (expresion -> CADENA .)
    ALARM_OFF       reduce using rule 35 (expresion -> CADENA .)
    SENSOR_PIR      reduce using rule 35 (expresion -> CADENA .)
    STOP            reduce using rule 35 (expresion -> CADENA .)
    IF              reduce using rule 35 (expresion -> CADENA .)
    WHILE           reduce using rule 35 (expresion -> CADENA .)
    FOR             reduce using rule 35 (expresion -> CADENA .)
    INT             reduce using rule 35 (expresion -> CADENA .)
    BOOL            reduce using rule 35 (expresion -> CADENA .)
    STG             reduce using rule 35 (expresion -> CADENA .)
    REAL            reduce using rule 35 (expresion -> CADENA .)
    END             reduce using rule 35 (expresion -> CADENA .)
    $end            reduce using rule 35 (expresion -> CADENA .)
    ELSE            reduce using rule 35 (expresion -> CADENA .)


state 60

    (36) expresion -> TRUE .

    SUMA            reduce using rule 36 (expresion -> TRUE .)
    RESTA           reduce using rule 36 (expresion -> TRUE .)
    MULTIPLICACION  reduce using rule 36 (expresion -> TRUE .)
    DIVISION        reduce using rule 36 (expresion -> TRUE .)
    MENORQUE        reduce using rule 36 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 36 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 36 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 36 (expresion -> TRUE .)
    IGUAL           reduce using rule 36 (expresion -> TRUE .)
    DIFERENTE       reduce using rule 36 (expresion -> TRUE .)
    LLAVE_A         reduce using rule 36 (expresion -> TRUE .)
    PARENTESIS_B    reduce using rule 36 (expresion -> TRUE .)
    PUNTOCOMA       reduce using rule 36 (expresion -> TRUE .)
    LLAVE_C         reduce using rule 36 (expresion -> TRUE .)
    MOVE_TO         reduce using rule 36 (expresion -> TRUE .)
    WAIT_MOTION     reduce using rule 36 (expresion -> TRUE .)
    START_RECORD    reduce using rule 36 (expresion -> TRUE .)
    STOP_RECORD     reduce using rule 36 (expresion -> TRUE .)
    LIGHT_ON        reduce using rule 36 (expresion -> TRUE .)
    LIGHT_OFF       reduce using rule 36 (expresion -> TRUE .)
    ALARM_ON        reduce using rule 36 (expresion -> TRUE .)
    ALARM_OFF       reduce using rule 36 (expresion -> TRUE .)
    SENSOR_PIR      reduce using rule 36 (expresion -> TRUE .)
    STOP            reduce using rule 36 (expresion -> TRUE .)
    IF              reduce using rule 36 (expresion -> TRUE .)
    WHILE           reduce using rule 36 (expresion -> TRUE .)
    FOR             reduce using rule 36 (expresion -> TRUE .)
    INT             reduce using rule 36 (expresion -> TRUE .)
    BOOL            reduce using rule 36 (expresion -> TRUE .)
    STG             reduce using rule 36 (expresion -> TRUE .)
    REAL            reduce using rule 36 (expresion -> TRUE .)
    END             reduce using rule 36 (expresion -> TRUE .)
    $end            reduce using rule 36 (expresion -> TRUE .)
    ELSE            reduce using rule 36 (expresion -> TRUE .)


state 61

    (37) expresion -> FALSE .

    SUMA            reduce using rule 37 (expresion -> FALSE .)
    RESTA           reduce using rule 37 (expresion -> FALSE .)
    MULTIPLICACION  reduce using rule 37 (expresion -> FALSE .)
    DIVISION        reduce using rule 37 (expresion -> FALSE .)
    MENORQUE        reduce using rule 37 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 37 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 37 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 37 (expresion -> FALSE .)
    IGUAL           reduce using rule 37 (expresion -> FALSE .)
    DIFERENTE       reduce using rule 37 (expresion -> FALSE .)
    LLAVE_A         reduce using rule 37 (expresion -> FALSE .)
    PARENTESIS_B    reduce using rule 37 (expresion -> FALSE .)
    PUNTOCOMA       reduce using rule 37 (expresion -> FALSE .)
    LLAVE_C         reduce using rule 37 (expresion -> FALSE .)
    MOVE_TO         reduce using rule 37 (expresion -> FALSE .)
    WAIT_MOTION     reduce using rule 37 (expresion -> FALSE .)
    START_RECORD    reduce using rule 37 (expresion -> FALSE .)
    STOP_RECORD     reduce using rule 37 (expresion -> FALSE .)
    LIGHT_ON        reduce using rule 37 (expresion -> FALSE .)
    LIGHT_OFF       reduce using rule 37 (expresion -> FALSE .)
    ALARM_ON        reduce using rule 37 (expresion -> FALSE .)
    ALARM_OFF       reduce using rule 37 (expresion -> FALSE .)
    SENSOR_PIR      reduce using rule 37 (expresion -> FALSE .)
    STOP            reduce using rule 37 (expresion -> FALSE .)
    IF              reduce using rule 37 (expresion -> FALSE .)
    WHILE           reduce using rule 37 (expresion -> FALSE .)
    FOR             reduce using rule 37 (expresion -> FALSE .)
    INT             reduce using rule 37 (expresion -> FALSE .)
    BOOL            reduce using rule 37 (expresion -> FALSE .)
    STG             reduce using rule 37 (expresion -> FALSE .)
    REAL            reduce using rule 37 (expresion -> FALSE .)
    END             reduce using rule 37 (expresion -> FALSE .)
    $end            reduce using rule 37 (expresion -> FALSE .)
    ELSE            reduce using rule 37 (expresion -> FALSE .)


state 62

    (42) for_loop -> FOR PARENTESIS_A . for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo
    (43) for_init -> . tipo ID ASIGNACION expresion
    (44) for_init -> . ID ASIGNACION expresion
    (17) tipo -> . INT
    (18) tipo -> . BOOL
    (19) tipo -> . STG
    (20) tipo -> . REAL

    ID              shift and go to state 91
    INT             shift and go to state 26
    BOOL            shift and go to state 27
    STG             shift and go to state 28
    REAL            shift and go to state 29

    for_init                       shift and go to state 89
    tipo                           shift and go to state 90

state 63

    (14) declaracion -> tipo ID ASIGNACION . expresion PUNTOCOMA
    (15) declaracion -> tipo ID ASIGNACION . PUNTOCOMA
    (16) declaracion -> tipo ID ASIGNACION . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    PUNTOCOMA       shift and go to state 93
    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 92

state 64

    (49) declaracion -> MOVE_TO PARENTESIS_A NUMERO . COMA NUMERO PARENTESIS_B PUNTOCOMA
    (50) declaracion -> MOVE_TO PARENTESIS_A NUMERO . COMA PARENTESIS_B PUNTOCOMA
    (52) declaracion -> MOVE_TO PARENTESIS_A NUMERO . NUMERO PARENTESIS_B PUNTOCOMA
    (53) declaracion -> MOVE_TO PARENTESIS_A NUMERO . COMA NUMERO PARENTESIS_B
    (55) declaracion -> MOVE_TO PARENTESIS_A NUMERO . PARENTESIS_B PUNTOCOMA
    (57) declaracion -> MOVE_TO PARENTESIS_A NUMERO . COMA NUMERO PUNTOCOMA

    COMA            shift and go to state 95
    NUMERO          shift and go to state 94
    PARENTESIS_B    shift and go to state 96


state 65

    (51) declaracion -> MOVE_TO PARENTESIS_A COMA . NUMERO PARENTESIS_B PUNTOCOMA

    NUMERO          shift and go to state 97


state 66

    (54) declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B . PUNTOCOMA

    PUNTOCOMA       shift and go to state 98


state 67

    (56) declaracion -> MOVE_TO NUMERO COMA . NUMERO PARENTESIS_B PUNTOCOMA
    (58) declaracion -> MOVE_TO NUMERO COMA . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 99


state 68

    (59) declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B . PUNTOCOMA
    (61) declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .

    PUNTOCOMA       shift and go to state 100
    LLAVE_C         reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    MOVE_TO         reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    WAIT_MOTION     reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    START_RECORD    reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    STOP_RECORD     reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    LIGHT_ON        reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    LIGHT_OFF       reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    ALARM_ON        reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    ALARM_OFF       reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    SENSOR_PIR      reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    STOP            reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    IF              reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    WHILE           reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    FOR             reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    INT             reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    BOOL            reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    STG             reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    REAL            reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    END             reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    $end            reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)
    ELSE            reduce using rule 61 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B .)


state 69

    (62) declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B . PUNTOCOMA
    (64) declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .

    PUNTOCOMA       shift and go to state 101
    LLAVE_C         reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    MOVE_TO         reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    WAIT_MOTION     reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    START_RECORD    reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    STOP_RECORD     reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    LIGHT_ON        reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    LIGHT_OFF       reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    ALARM_ON        reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    ALARM_OFF       reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    SENSOR_PIR      reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    STOP            reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    IF              reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    WHILE           reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    FOR             reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    INT             reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    BOOL            reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    STG             reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    REAL            reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    END             reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    $end            reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)
    ELSE            reduce using rule 64 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B .)


state 70

    (68) declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .

    LLAVE_C         reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    MOVE_TO         reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    START_RECORD    reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    STOP_RECORD     reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    LIGHT_ON        reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    ALARM_ON        reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    ALARM_OFF       reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    STOP            reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    IF              reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    WHILE           reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    FOR             reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    INT             reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    BOOL            reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    STG             reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    REAL            reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    END             reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    $end            reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)
    ELSE            reduce using rule 68 (declaracion -> START_RECORD PARENTESIS_A PUNTOCOMA .)


state 71

    (69) declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 69 (declaracion -> START_RECORD PARENTESIS_B PUNTOCOMA .)


state 72

    (63) declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B . PUNTOCOMA
    (65) declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .

    PUNTOCOMA       shift and go to state 102
    LLAVE_C         reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    MOVE_TO         reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    WAIT_MOTION     reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    START_RECORD    reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    STOP_RECORD     reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    LIGHT_ON        reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    LIGHT_OFF       reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    ALARM_ON        reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    ALARM_OFF       reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    SENSOR_PIR      reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    STOP            reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    IF              reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    WHILE           reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    FOR             reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    INT             reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    BOOL            reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    STG             reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    REAL            reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    END             reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    $end            reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)
    ELSE            reduce using rule 65 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B .)


state 73

    (70) declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .

    LLAVE_C         reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    MOVE_TO         reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    START_RECORD    reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    STOP_RECORD     reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    LIGHT_ON        reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    ALARM_ON        reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    ALARM_OFF       reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    STOP            reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    IF              reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    WHILE           reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    FOR             reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    INT             reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    BOOL            reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    STG             reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    REAL            reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    END             reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    $end            reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)
    ELSE            reduce using rule 70 (declaracion -> STOP_RECORD PARENTESIS_A PUNTOCOMA .)


state 74

    (71) declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 71 (declaracion -> STOP_RECORD PARENTESIS_B PUNTOCOMA .)


state 75

    (32) expresion -> PARENTESIS_A . expresion PARENTESIS_B
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 103

state 76

    (38) si -> IF PARENTESIS_A expresion . PARENTESIS_B bloque_codigo
    (39) si -> IF PARENTESIS_A expresion . PARENTESIS_B bloque_codigo ELSE bloque_codigo
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    PARENTESIS_B    shift and go to state 104
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86
    IGUAL           shift and go to state 87
    DIFERENTE       shift and go to state 88


state 77

    (40) mientras -> WHILE PARENTESIS_A expresion . PARENTESIS_B bloque_codigo
    (32) expresion -> PARENTESIS_A expresion . PARENTESIS_B
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    PARENTESIS_B    shift and go to state 105
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86
    IGUAL           shift and go to state 87
    DIFERENTE       shift and go to state 88


state 78

    (41) mientras -> WHILE expresion bloque_codigo .

    LLAVE_C         reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    MOVE_TO         reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    WAIT_MOTION     reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    START_RECORD    reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    STOP_RECORD     reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    LIGHT_ON        reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    LIGHT_OFF       reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    ALARM_ON        reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    ALARM_OFF       reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    SENSOR_PIR      reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    STOP            reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    IF              reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    WHILE           reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    FOR             reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    INT             reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    BOOL            reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    STG             reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    REAL            reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    END             reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    $end            reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)
    ELSE            reduce using rule 41 (mientras -> WHILE expresion bloque_codigo .)


state 79

    (22) expresion -> expresion SUMA . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 106

state 80

    (23) expresion -> expresion RESTA . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 107

state 81

    (24) expresion -> expresion MULTIPLICACION . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 108

state 82

    (25) expresion -> expresion DIVISION . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 109

state 83

    (26) expresion -> expresion MENORQUE . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 110

state 84

    (27) expresion -> expresion MENORIGUAL . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 111

state 85

    (28) expresion -> expresion MAYORQUE . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 112

state 86

    (29) expresion -> expresion MAYORIGUAL . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 113

state 87

    (30) expresion -> expresion IGUAL . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 114

state 88

    (31) expresion -> expresion DIFERENTE . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 115

state 89

    (42) for_loop -> FOR PARENTESIS_A for_init . PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo

    PUNTOCOMA       shift and go to state 116


state 90

    (43) for_init -> tipo . ID ASIGNACION expresion

    ID              shift and go to state 117


state 91

    (44) for_init -> ID . ASIGNACION expresion

    ASIGNACION      shift and go to state 118


state 92

    (14) declaracion -> tipo ID ASIGNACION expresion . PUNTOCOMA
    (16) declaracion -> tipo ID ASIGNACION expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 119
    LLAVE_C         reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    MOVE_TO         reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    WAIT_MOTION     reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    START_RECORD    reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    STOP_RECORD     reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    LIGHT_ON        reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    LIGHT_OFF       reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    ALARM_ON        reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    ALARM_OFF       reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    SENSOR_PIR      reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    STOP            reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    IF              reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    WHILE           reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    FOR             reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    INT             reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    BOOL            reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    STG             reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    REAL            reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    END             reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    $end            reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    ELSE            reduce using rule 16 (declaracion -> tipo ID ASIGNACION expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86
    IGUAL           shift and go to state 87
    DIFERENTE       shift and go to state 88


state 93

    (15) declaracion -> tipo ID ASIGNACION PUNTOCOMA .

    LLAVE_C         reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    MOVE_TO         reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    START_RECORD    reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    STOP_RECORD     reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    LIGHT_ON        reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    ALARM_ON        reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    ALARM_OFF       reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    STOP            reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    IF              reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    WHILE           reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    FOR             reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    INT             reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    BOOL            reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    STG             reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    REAL            reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    END             reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    $end            reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)
    ELSE            reduce using rule 15 (declaracion -> tipo ID ASIGNACION PUNTOCOMA .)


state 94

    (52) declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO . PARENTESIS_B PUNTOCOMA

    PARENTESIS_B    shift and go to state 120


state 95

    (49) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA . NUMERO PARENTESIS_B PUNTOCOMA
    (50) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA . PARENTESIS_B PUNTOCOMA
    (53) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA . NUMERO PARENTESIS_B
    (57) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 121
    PARENTESIS_B    shift and go to state 122


state 96

    (55) declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B . PUNTOCOMA

    PUNTOCOMA       shift and go to state 123


state 97

    (51) declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO . PARENTESIS_B PUNTOCOMA

    PARENTESIS_B    shift and go to state 124


state 98

    (54) declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 54 (declaracion -> MOVE_TO PARENTESIS_A PARENTESIS_B PUNTOCOMA .)


state 99

    (56) declaracion -> MOVE_TO NUMERO COMA NUMERO . PARENTESIS_B PUNTOCOMA
    (58) declaracion -> MOVE_TO NUMERO COMA NUMERO . PUNTOCOMA

    PARENTESIS_B    shift and go to state 125
    PUNTOCOMA       shift and go to state 126


state 100

    (59) declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 59 (declaracion -> WAIT_MOTION PARENTESIS_A PARENTESIS_B PUNTOCOMA .)


state 101

    (62) declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 62 (declaracion -> START_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)


state 102

    (63) declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 63 (declaracion -> STOP_RECORD PARENTESIS_A PARENTESIS_B PUNTOCOMA .)


state 103

    (32) expresion -> PARENTESIS_A expresion . PARENTESIS_B
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    PARENTESIS_B    shift and go to state 127
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86
    IGUAL           shift and go to state 87
    DIFERENTE       shift and go to state 88


state 104

    (38) si -> IF PARENTESIS_A expresion PARENTESIS_B . bloque_codigo
    (39) si -> IF PARENTESIS_A expresion PARENTESIS_B . bloque_codigo ELSE bloque_codigo
    (4) bloque_codigo -> . LLAVE_A lista_declaraciones LLAVE_C
    (5) bloque_codigo -> . LLAVE_A lista_declaraciones

    LLAVE_A         shift and go to state 4

    bloque_codigo                  shift and go to state 128

state 105

    (40) mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B . bloque_codigo
    (32) expresion -> PARENTESIS_A expresion PARENTESIS_B .
    (4) bloque_codigo -> . LLAVE_A lista_declaraciones LLAVE_C
    (5) bloque_codigo -> . LLAVE_A lista_declaraciones

  ! shift/reduce conflict for LLAVE_A resolved as shift
    SUMA            reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    RESTA           reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MULTIPLICACION  reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    DIVISION        reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MENORQUE        reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MENORIGUAL      reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MAYORQUE        reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MAYORIGUAL      reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    IGUAL           reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    DIFERENTE       reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    LLAVE_A         shift and go to state 4

  ! LLAVE_A         [ reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .) ]

    bloque_codigo                  shift and go to state 129

state 106

    (22) expresion -> expresion SUMA expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    SUMA            reduce using rule 22 (expresion -> expresion SUMA expresion .)
    RESTA           reduce using rule 22 (expresion -> expresion SUMA expresion .)
    MENORQUE        reduce using rule 22 (expresion -> expresion SUMA expresion .)
    MENORIGUAL      reduce using rule 22 (expresion -> expresion SUMA expresion .)
    MAYORQUE        reduce using rule 22 (expresion -> expresion SUMA expresion .)
    MAYORIGUAL      reduce using rule 22 (expresion -> expresion SUMA expresion .)
    IGUAL           reduce using rule 22 (expresion -> expresion SUMA expresion .)
    DIFERENTE       reduce using rule 22 (expresion -> expresion SUMA expresion .)
    LLAVE_A         reduce using rule 22 (expresion -> expresion SUMA expresion .)
    PARENTESIS_B    reduce using rule 22 (expresion -> expresion SUMA expresion .)
    PUNTOCOMA       reduce using rule 22 (expresion -> expresion SUMA expresion .)
    LLAVE_C         reduce using rule 22 (expresion -> expresion SUMA expresion .)
    MOVE_TO         reduce using rule 22 (expresion -> expresion SUMA expresion .)
    WAIT_MOTION     reduce using rule 22 (expresion -> expresion SUMA expresion .)
    START_RECORD    reduce using rule 22 (expresion -> expresion SUMA expresion .)
    STOP_RECORD     reduce using rule 22 (expresion -> expresion SUMA expresion .)
    LIGHT_ON        reduce using rule 22 (expresion -> expresion SUMA expresion .)
    LIGHT_OFF       reduce using rule 22 (expresion -> expresion SUMA expresion .)
    ALARM_ON        reduce using rule 22 (expresion -> expresion SUMA expresion .)
    ALARM_OFF       reduce using rule 22 (expresion -> expresion SUMA expresion .)
    SENSOR_PIR      reduce using rule 22 (expresion -> expresion SUMA expresion .)
    STOP            reduce using rule 22 (expresion -> expresion SUMA expresion .)
    IF              reduce using rule 22 (expresion -> expresion SUMA expresion .)
    WHILE           reduce using rule 22 (expresion -> expresion SUMA expresion .)
    FOR             reduce using rule 22 (expresion -> expresion SUMA expresion .)
    INT             reduce using rule 22 (expresion -> expresion SUMA expresion .)
    BOOL            reduce using rule 22 (expresion -> expresion SUMA expresion .)
    STG             reduce using rule 22 (expresion -> expresion SUMA expresion .)
    REAL            reduce using rule 22 (expresion -> expresion SUMA expresion .)
    END             reduce using rule 22 (expresion -> expresion SUMA expresion .)
    $end            reduce using rule 22 (expresion -> expresion SUMA expresion .)
    ELSE            reduce using rule 22 (expresion -> expresion SUMA expresion .)
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82

  ! MULTIPLICACION  [ reduce using rule 22 (expresion -> expresion SUMA expresion .) ]
  ! DIVISION        [ reduce using rule 22 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 79 ]
  ! RESTA           [ shift and go to state 80 ]
  ! MENORQUE        [ shift and go to state 83 ]
  ! MENORIGUAL      [ shift and go to state 84 ]
  ! MAYORQUE        [ shift and go to state 85 ]
  ! MAYORIGUAL      [ shift and go to state 86 ]
  ! IGUAL           [ shift and go to state 87 ]
  ! DIFERENTE       [ shift and go to state 88 ]


state 107

    (23) expresion -> expresion RESTA expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    SUMA            reduce using rule 23 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 23 (expresion -> expresion RESTA expresion .)
    MENORQUE        reduce using rule 23 (expresion -> expresion RESTA expresion .)
    MENORIGUAL      reduce using rule 23 (expresion -> expresion RESTA expresion .)
    MAYORQUE        reduce using rule 23 (expresion -> expresion RESTA expresion .)
    MAYORIGUAL      reduce using rule 23 (expresion -> expresion RESTA expresion .)
    IGUAL           reduce using rule 23 (expresion -> expresion RESTA expresion .)
    DIFERENTE       reduce using rule 23 (expresion -> expresion RESTA expresion .)
    LLAVE_A         reduce using rule 23 (expresion -> expresion RESTA expresion .)
    PARENTESIS_B    reduce using rule 23 (expresion -> expresion RESTA expresion .)
    PUNTOCOMA       reduce using rule 23 (expresion -> expresion RESTA expresion .)
    LLAVE_C         reduce using rule 23 (expresion -> expresion RESTA expresion .)
    MOVE_TO         reduce using rule 23 (expresion -> expresion RESTA expresion .)
    WAIT_MOTION     reduce using rule 23 (expresion -> expresion RESTA expresion .)
    START_RECORD    reduce using rule 23 (expresion -> expresion RESTA expresion .)
    STOP_RECORD     reduce using rule 23 (expresion -> expresion RESTA expresion .)
    LIGHT_ON        reduce using rule 23 (expresion -> expresion RESTA expresion .)
    LIGHT_OFF       reduce using rule 23 (expresion -> expresion RESTA expresion .)
    ALARM_ON        reduce using rule 23 (expresion -> expresion RESTA expresion .)
    ALARM_OFF       reduce using rule 23 (expresion -> expresion RESTA expresion .)
    SENSOR_PIR      reduce using rule 23 (expresion -> expresion RESTA expresion .)
    STOP            reduce using rule 23 (expresion -> expresion RESTA expresion .)
    IF              reduce using rule 23 (expresion -> expresion RESTA expresion .)
    WHILE           reduce using rule 23 (expresion -> expresion RESTA expresion .)
    FOR             reduce using rule 23 (expresion -> expresion RESTA expresion .)
    INT             reduce using rule 23 (expresion -> expresion RESTA expresion .)
    BOOL            reduce using rule 23 (expresion -> expresion RESTA expresion .)
    STG             reduce using rule 23 (expresion -> expresion RESTA expresion .)
    REAL            reduce using rule 23 (expresion -> expresion RESTA expresion .)
    END             reduce using rule 23 (expresion -> expresion RESTA expresion .)
    $end            reduce using rule 23 (expresion -> expresion RESTA expresion .)
    ELSE            reduce using rule 23 (expresion -> expresion RESTA expresion .)
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82

  ! MULTIPLICACION  [ reduce using rule 23 (expresion -> expresion RESTA expresion .) ]
  ! DIVISION        [ reduce using rule 23 (expresion -> expresion RESTA expresion .) ]
  ! SUMA            [ shift and go to state 79 ]
  ! RESTA           [ shift and go to state 80 ]
  ! MENORQUE        [ shift and go to state 83 ]
  ! MENORIGUAL      [ shift and go to state 84 ]
  ! MAYORQUE        [ shift and go to state 85 ]
  ! MAYORIGUAL      [ shift and go to state 86 ]
  ! IGUAL           [ shift and go to state 87 ]
  ! DIFERENTE       [ shift and go to state 88 ]


state 108

    (24) expresion -> expresion MULTIPLICACION expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    SUMA            reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    RESTA           reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    MULTIPLICACION  reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    DIVISION        reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    MENORQUE        reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    MENORIGUAL      reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    MAYORQUE        reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    MAYORIGUAL      reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    IGUAL           reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    DIFERENTE       reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    LLAVE_A         reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    PARENTESIS_B    reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    PUNTOCOMA       reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    LLAVE_C         reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    MOVE_TO         reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    WAIT_MOTION     reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    START_RECORD    reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    STOP_RECORD     reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    LIGHT_ON        reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    LIGHT_OFF       reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    ALARM_ON        reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    ALARM_OFF       reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    SENSOR_PIR      reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    STOP            reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    IF              reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    WHILE           reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    FOR             reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    INT             reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    BOOL            reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    STG             reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    REAL            reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    END             reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    $end            reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)
    ELSE            reduce using rule 24 (expresion -> expresion MULTIPLICACION expresion .)

  ! SUMA            [ shift and go to state 79 ]
  ! RESTA           [ shift and go to state 80 ]
  ! MULTIPLICACION  [ shift and go to state 81 ]
  ! DIVISION        [ shift and go to state 82 ]
  ! MENORQUE        [ shift and go to state 83 ]
  ! MENORIGUAL      [ shift and go to state 84 ]
  ! MAYORQUE        [ shift and go to state 85 ]
  ! MAYORIGUAL      [ shift and go to state 86 ]
  ! IGUAL           [ shift and go to state 87 ]
  ! DIFERENTE       [ shift and go to state 88 ]


state 109

    (25) expresion -> expresion DIVISION expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    SUMA            reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    RESTA           reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    MULTIPLICACION  reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    MENORQUE        reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    MENORIGUAL      reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    MAYORQUE        reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    MAYORIGUAL      reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    IGUAL           reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    DIFERENTE       reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    LLAVE_A         reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    PARENTESIS_B    reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    PUNTOCOMA       reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    LLAVE_C         reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    MOVE_TO         reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    WAIT_MOTION     reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    START_RECORD    reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    STOP_RECORD     reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    LIGHT_ON        reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    LIGHT_OFF       reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    ALARM_ON        reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    ALARM_OFF       reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    SENSOR_PIR      reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    STOP            reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    IF              reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    WHILE           reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    FOR             reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    INT             reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    BOOL            reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    STG             reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    REAL            reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    END             reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    $end            reduce using rule 25 (expresion -> expresion DIVISION expresion .)
    ELSE            reduce using rule 25 (expresion -> expresion DIVISION expresion .)

  ! SUMA            [ shift and go to state 79 ]
  ! RESTA           [ shift and go to state 80 ]
  ! MULTIPLICACION  [ shift and go to state 81 ]
  ! DIVISION        [ shift and go to state 82 ]
  ! MENORQUE        [ shift and go to state 83 ]
  ! MENORIGUAL      [ shift and go to state 84 ]
  ! MAYORQUE        [ shift and go to state 85 ]
  ! MAYORIGUAL      [ shift and go to state 86 ]
  ! IGUAL           [ shift and go to state 87 ]
  ! DIFERENTE       [ shift and go to state 88 ]


state 110

    (26) expresion -> expresion MENORQUE expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    MENORQUE        reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    MENORIGUAL      reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    MAYORIGUAL      reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    DIFERENTE       reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    LLAVE_A         reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    PARENTESIS_B    reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    PUNTOCOMA       reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    LLAVE_C         reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    MOVE_TO         reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    WAIT_MOTION     reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    START_RECORD    reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    STOP_RECORD     reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    LIGHT_ON        reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    LIGHT_OFF       reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    ALARM_ON        reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    ALARM_OFF       reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    SENSOR_PIR      reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    STOP            reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    IF              reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    WHILE           reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    FOR             reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    INT             reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    BOOL            reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    STG             reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    REAL            reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    END             reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    $end            reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    ELSE            reduce using rule 26 (expresion -> expresion MENORQUE expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82

  ! SUMA            [ reduce using rule 26 (expresion -> expresion MENORQUE expresion .) ]
  ! RESTA           [ reduce using rule 26 (expresion -> expresion MENORQUE expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 26 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVISION        [ reduce using rule 26 (expresion -> expresion MENORQUE expresion .) ]
  ! MENORQUE        [ shift and go to state 83 ]
  ! MENORIGUAL      [ shift and go to state 84 ]
  ! MAYORQUE        [ shift and go to state 85 ]
  ! MAYORIGUAL      [ shift and go to state 86 ]
  ! IGUAL           [ shift and go to state 87 ]
  ! DIFERENTE       [ shift and go to state 88 ]


state 111

    (27) expresion -> expresion MENORIGUAL expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    MENORQUE        reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQUE        reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    IGUAL           reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    DIFERENTE       reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    LLAVE_A         reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    PARENTESIS_B    reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    PUNTOCOMA       reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    LLAVE_C         reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    MOVE_TO         reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    WAIT_MOTION     reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    START_RECORD    reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    STOP_RECORD     reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    LIGHT_ON        reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    LIGHT_OFF       reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    ALARM_ON        reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    ALARM_OFF       reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    SENSOR_PIR      reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    STOP            reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    INT             reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    BOOL            reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    STG             reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    REAL            reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    END             reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    ELSE            reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82

  ! SUMA            [ reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .) ]
  ! RESTA           [ reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 27 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENORQUE        [ shift and go to state 83 ]
  ! MENORIGUAL      [ shift and go to state 84 ]
  ! MAYORQUE        [ shift and go to state 85 ]
  ! MAYORIGUAL      [ shift and go to state 86 ]
  ! IGUAL           [ shift and go to state 87 ]
  ! DIFERENTE       [ shift and go to state 88 ]


state 112

    (28) expresion -> expresion MAYORQUE expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    MENORQUE        reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    MENORIGUAL      reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    MAYORIGUAL      reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    DIFERENTE       reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    LLAVE_A         reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    PARENTESIS_B    reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    PUNTOCOMA       reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    LLAVE_C         reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    MOVE_TO         reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    WAIT_MOTION     reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    START_RECORD    reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    STOP_RECORD     reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    LIGHT_ON        reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    LIGHT_OFF       reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    ALARM_ON        reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    ALARM_OFF       reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    SENSOR_PIR      reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    STOP            reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    IF              reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    WHILE           reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    FOR             reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    INT             reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    BOOL            reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    STG             reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    REAL            reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    END             reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    $end            reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    ELSE            reduce using rule 28 (expresion -> expresion MAYORQUE expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82

  ! SUMA            [ reduce using rule 28 (expresion -> expresion MAYORQUE expresion .) ]
  ! RESTA           [ reduce using rule 28 (expresion -> expresion MAYORQUE expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 28 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVISION        [ reduce using rule 28 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENORQUE        [ shift and go to state 83 ]
  ! MENORIGUAL      [ shift and go to state 84 ]
  ! MAYORQUE        [ shift and go to state 85 ]
  ! MAYORIGUAL      [ shift and go to state 86 ]
  ! IGUAL           [ shift and go to state 87 ]
  ! DIFERENTE       [ shift and go to state 88 ]


state 113

    (29) expresion -> expresion MAYORIGUAL expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    MENORQUE        reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQUE        reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    IGUAL           reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    DIFERENTE       reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVE_A         reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    PARENTESIS_B    reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTOCOMA       reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVE_C         reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    MOVE_TO         reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    WAIT_MOTION     reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    START_RECORD    reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    STOP_RECORD     reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    LIGHT_ON        reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    LIGHT_OFF       reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    ALARM_ON        reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    ALARM_OFF       reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    SENSOR_PIR      reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    STOP            reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    INT             reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    BOOL            reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    STG             reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    REAL            reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    END             reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    ELSE            reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82

  ! SUMA            [ reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! RESTA           [ reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 29 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENORQUE        [ shift and go to state 83 ]
  ! MENORIGUAL      [ shift and go to state 84 ]
  ! MAYORQUE        [ shift and go to state 85 ]
  ! MAYORIGUAL      [ shift and go to state 86 ]
  ! IGUAL           [ shift and go to state 87 ]
  ! DIFERENTE       [ shift and go to state 88 ]


state 114

    (30) expresion -> expresion IGUAL expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    IGUAL           reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    DIFERENTE       reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    LLAVE_A         reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    PARENTESIS_B    reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    PUNTOCOMA       reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    LLAVE_C         reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    MOVE_TO         reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    WAIT_MOTION     reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    START_RECORD    reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    STOP_RECORD     reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    LIGHT_ON        reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    LIGHT_OFF       reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    ALARM_ON        reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    ALARM_OFF       reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    SENSOR_PIR      reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    STOP            reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    IF              reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    WHILE           reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    FOR             reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    INT             reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    BOOL            reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    STG             reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    REAL            reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    END             reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    $end            reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    ELSE            reduce using rule 30 (expresion -> expresion IGUAL expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86

  ! SUMA            [ reduce using rule 30 (expresion -> expresion IGUAL expresion .) ]
  ! RESTA           [ reduce using rule 30 (expresion -> expresion IGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 30 (expresion -> expresion IGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 30 (expresion -> expresion IGUAL expresion .) ]
  ! MENORQUE        [ reduce using rule 30 (expresion -> expresion IGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 30 (expresion -> expresion IGUAL expresion .) ]
  ! MAYORQUE        [ reduce using rule 30 (expresion -> expresion IGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 30 (expresion -> expresion IGUAL expresion .) ]
  ! IGUAL           [ shift and go to state 87 ]
  ! DIFERENTE       [ shift and go to state 88 ]


state 115

    (31) expresion -> expresion DIFERENTE expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    IGUAL           reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    DIFERENTE       reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    LLAVE_A         reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    PARENTESIS_B    reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    PUNTOCOMA       reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    LLAVE_C         reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    MOVE_TO         reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    WAIT_MOTION     reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    START_RECORD    reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    STOP_RECORD     reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    LIGHT_ON        reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    LIGHT_OFF       reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    ALARM_ON        reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    ALARM_OFF       reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    SENSOR_PIR      reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    STOP            reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    IF              reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    WHILE           reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    FOR             reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    INT             reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    BOOL            reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    STG             reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    REAL            reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    END             reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    $end            reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    ELSE            reduce using rule 31 (expresion -> expresion DIFERENTE expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86

  ! SUMA            [ reduce using rule 31 (expresion -> expresion DIFERENTE expresion .) ]
  ! RESTA           [ reduce using rule 31 (expresion -> expresion DIFERENTE expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 31 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVISION        [ reduce using rule 31 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENORQUE        [ reduce using rule 31 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 31 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYORQUE        [ reduce using rule 31 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 31 (expresion -> expresion DIFERENTE expresion .) ]
  ! IGUAL           [ shift and go to state 87 ]
  ! DIFERENTE       [ shift and go to state 88 ]


state 116

    (42) for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA . for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo
    (45) for_condicion -> . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    for_condicion                  shift and go to state 130
    expresion                      shift and go to state 131

state 117

    (43) for_init -> tipo ID . ASIGNACION expresion

    ASIGNACION      shift and go to state 132


state 118

    (44) for_init -> ID ASIGNACION . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 133

state 119

    (14) declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .

    LLAVE_C         reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    MOVE_TO         reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    START_RECORD    reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    STOP_RECORD     reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    LIGHT_ON        reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    ALARM_ON        reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    ALARM_OFF       reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    STOP            reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    IF              reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    WHILE           reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    FOR             reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    INT             reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    BOOL            reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    STG             reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    REAL            reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    END             reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    $end            reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)
    ELSE            reduce using rule 14 (declaracion -> tipo ID ASIGNACION expresion PUNTOCOMA .)


state 120

    (52) declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B . PUNTOCOMA

    PUNTOCOMA       shift and go to state 134


state 121

    (49) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO . PARENTESIS_B PUNTOCOMA
    (53) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO . PARENTESIS_B
    (57) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO . PUNTOCOMA

    PARENTESIS_B    shift and go to state 135
    PUNTOCOMA       shift and go to state 136


state 122

    (50) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B . PUNTOCOMA

    PUNTOCOMA       shift and go to state 137


state 123

    (55) declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 55 (declaracion -> MOVE_TO PARENTESIS_A NUMERO PARENTESIS_B PUNTOCOMA .)


state 124

    (51) declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B . PUNTOCOMA

    PUNTOCOMA       shift and go to state 138


state 125

    (56) declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B . PUNTOCOMA

    PUNTOCOMA       shift and go to state 139


state 126

    (58) declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .

    LLAVE_C         reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    MOVE_TO         reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    START_RECORD    reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    STOP_RECORD     reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    LIGHT_ON        reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    ALARM_ON        reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    ALARM_OFF       reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    STOP            reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    IF              reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    WHILE           reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    FOR             reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    INT             reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    BOOL            reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    STG             reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    REAL            reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    END             reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    $end            reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)
    ELSE            reduce using rule 58 (declaracion -> MOVE_TO NUMERO COMA NUMERO PUNTOCOMA .)


state 127

    (32) expresion -> PARENTESIS_A expresion PARENTESIS_B .

    PARENTESIS_B    reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    SUMA            reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    RESTA           reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MULTIPLICACION  reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    DIVISION        reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MENORQUE        reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MENORIGUAL      reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MAYORQUE        reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MAYORIGUAL      reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    IGUAL           reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    DIFERENTE       reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    PUNTOCOMA       reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    LLAVE_C         reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    MOVE_TO         reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    WAIT_MOTION     reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    START_RECORD    reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    STOP_RECORD     reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    LIGHT_ON        reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    LIGHT_OFF       reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    ALARM_ON        reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    ALARM_OFF       reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    SENSOR_PIR      reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    STOP            reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    IF              reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    WHILE           reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    FOR             reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    INT             reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    BOOL            reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    STG             reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    REAL            reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    END             reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    $end            reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    ELSE            reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)
    LLAVE_A         reduce using rule 32 (expresion -> PARENTESIS_A expresion PARENTESIS_B .)


state 128

    (38) si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .
    (39) si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo . ELSE bloque_codigo

  ! shift/reduce conflict for ELSE resolved as shift
    LLAVE_C         reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    MOVE_TO         reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    WAIT_MOTION     reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    START_RECORD    reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    STOP_RECORD     reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    LIGHT_ON        reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    LIGHT_OFF       reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    ALARM_ON        reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    ALARM_OFF       reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    SENSOR_PIR      reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    STOP            reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    IF              reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    WHILE           reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    FOR             reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    INT             reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    BOOL            reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    STG             reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    REAL            reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    END             reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    $end            reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    ELSE            shift and go to state 140

  ! ELSE            [ reduce using rule 38 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo .) ]


state 129

    (40) mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .

    LLAVE_C         reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    MOVE_TO         reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    WAIT_MOTION     reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    START_RECORD    reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    STOP_RECORD     reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    LIGHT_ON        reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    LIGHT_OFF       reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    ALARM_ON        reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    ALARM_OFF       reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    SENSOR_PIR      reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    STOP            reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    IF              reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    WHILE           reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    FOR             reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    INT             reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    BOOL            reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    STG             reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    REAL            reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    END             reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    $end            reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)
    ELSE            reduce using rule 40 (mientras -> WHILE PARENTESIS_A expresion PARENTESIS_B bloque_codigo .)


state 130

    (42) for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion . PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo

    PUNTOCOMA       shift and go to state 141


state 131

    (45) for_condicion -> expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 45 (for_condicion -> expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86
    IGUAL           shift and go to state 87
    DIFERENTE       shift and go to state 88


state 132

    (43) for_init -> tipo ID ASIGNACION . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 142

state 133

    (44) for_init -> ID ASIGNACION expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 44 (for_init -> ID ASIGNACION expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86
    IGUAL           shift and go to state 87
    DIFERENTE       shift and go to state 88


state 134

    (52) declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 52 (declaracion -> MOVE_TO PARENTESIS_A NUMERO NUMERO PARENTESIS_B PUNTOCOMA .)


state 135

    (49) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B . PUNTOCOMA
    (53) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .

    PUNTOCOMA       shift and go to state 143
    LLAVE_C         reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    MOVE_TO         reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    WAIT_MOTION     reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    START_RECORD    reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    STOP_RECORD     reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    LIGHT_ON        reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    LIGHT_OFF       reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    ALARM_ON        reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    ALARM_OFF       reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    SENSOR_PIR      reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    STOP            reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    IF              reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    WHILE           reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    FOR             reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    INT             reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    BOOL            reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    STG             reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    REAL            reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    END             reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    $end            reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)
    ELSE            reduce using rule 53 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B .)


state 136

    (57) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .

    LLAVE_C         reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    MOVE_TO         reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    START_RECORD    reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    STOP_RECORD     reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    LIGHT_ON        reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    ALARM_ON        reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    ALARM_OFF       reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    STOP            reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    IF              reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    WHILE           reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    FOR             reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    INT             reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    BOOL            reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    STG             reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    REAL            reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    END             reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    $end            reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)
    ELSE            reduce using rule 57 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PUNTOCOMA .)


state 137

    (50) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 50 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA PARENTESIS_B PUNTOCOMA .)


state 138

    (51) declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 51 (declaracion -> MOVE_TO PARENTESIS_A COMA NUMERO PARENTESIS_B PUNTOCOMA .)


state 139

    (56) declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 56 (declaracion -> MOVE_TO NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)


state 140

    (39) si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE . bloque_codigo
    (4) bloque_codigo -> . LLAVE_A lista_declaraciones LLAVE_C
    (5) bloque_codigo -> . LLAVE_A lista_declaraciones

    LLAVE_A         shift and go to state 4

    bloque_codigo                  shift and go to state 144

state 141

    (42) for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA . for_actualizacion PARENTESIS_B bloque_codigo
    (46) for_actualizacion -> . ID ASIGNACION expresion
    (47) for_actualizacion -> . ID MASMAS
    (48) for_actualizacion -> . ID MENOSMENOS

    ID              shift and go to state 146

    for_actualizacion              shift and go to state 145

state 142

    (43) for_init -> tipo ID ASIGNACION expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 43 (for_init -> tipo ID ASIGNACION expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86
    IGUAL           shift and go to state 87
    DIFERENTE       shift and go to state 88


state 143

    (49) declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .

    LLAVE_C         reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    MOVE_TO         reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    WAIT_MOTION     reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    START_RECORD    reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    STOP_RECORD     reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    LIGHT_ON        reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    LIGHT_OFF       reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    ALARM_ON        reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    ALARM_OFF       reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    SENSOR_PIR      reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    STOP            reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    IF              reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    WHILE           reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    FOR             reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    INT             reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    BOOL            reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    STG             reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    REAL            reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    END             reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    $end            reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)
    ELSE            reduce using rule 49 (declaracion -> MOVE_TO PARENTESIS_A NUMERO COMA NUMERO PARENTESIS_B PUNTOCOMA .)


state 144

    (39) si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .

    LLAVE_C         reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    MOVE_TO         reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    WAIT_MOTION     reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    START_RECORD    reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    STOP_RECORD     reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    LIGHT_ON        reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    LIGHT_OFF       reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    ALARM_ON        reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    ALARM_OFF       reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    SENSOR_PIR      reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    STOP            reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    IF              reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    WHILE           reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    FOR             reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    INT             reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    BOOL            reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    STG             reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    REAL            reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    END             reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    $end            reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)
    ELSE            reduce using rule 39 (si -> IF PARENTESIS_A expresion PARENTESIS_B bloque_codigo ELSE bloque_codigo .)


state 145

    (42) for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion . PARENTESIS_B bloque_codigo

    PARENTESIS_B    shift and go to state 147


state 146

    (46) for_actualizacion -> ID . ASIGNACION expresion
    (47) for_actualizacion -> ID . MASMAS
    (48) for_actualizacion -> ID . MENOSMENOS

    ASIGNACION      shift and go to state 148
    MASMAS          shift and go to state 149
    MENOSMENOS      shift and go to state 150


state 147

    (42) for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B . bloque_codigo
    (4) bloque_codigo -> . LLAVE_A lista_declaraciones LLAVE_C
    (5) bloque_codigo -> . LLAVE_A lista_declaraciones

    LLAVE_A         shift and go to state 4

    bloque_codigo                  shift and go to state 151

state 148

    (46) for_actualizacion -> ID ASIGNACION . expresion
    (21) expresion -> . ID
    (22) expresion -> . expresion SUMA expresion
    (23) expresion -> . expresion RESTA expresion
    (24) expresion -> . expresion MULTIPLICACION expresion
    (25) expresion -> . expresion DIVISION expresion
    (26) expresion -> . expresion MENORQUE expresion
    (27) expresion -> . expresion MENORIGUAL expresion
    (28) expresion -> . expresion MAYORQUE expresion
    (29) expresion -> . expresion MAYORIGUAL expresion
    (30) expresion -> . expresion IGUAL expresion
    (31) expresion -> . expresion DIFERENTE expresion
    (32) expresion -> . PARENTESIS_A expresion PARENTESIS_B
    (33) expresion -> . NUMERO
    (34) expresion -> . REAL_LIT
    (35) expresion -> . CADENA
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE

    ID              shift and go to state 56
    PARENTESIS_A    shift and go to state 75
    NUMERO          shift and go to state 57
    REAL_LIT        shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expresion                      shift and go to state 152

state 149

    (47) for_actualizacion -> ID MASMAS .

    PARENTESIS_B    reduce using rule 47 (for_actualizacion -> ID MASMAS .)


state 150

    (48) for_actualizacion -> ID MENOSMENOS .

    PARENTESIS_B    reduce using rule 48 (for_actualizacion -> ID MENOSMENOS .)


state 151

    (42) for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .

    LLAVE_C         reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    MOVE_TO         reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    WAIT_MOTION     reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    START_RECORD    reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    STOP_RECORD     reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    LIGHT_ON        reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    LIGHT_OFF       reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    ALARM_ON        reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    ALARM_OFF       reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    SENSOR_PIR      reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    STOP            reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    IF              reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    WHILE           reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    FOR             reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    INT             reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    BOOL            reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    STG             reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    REAL            reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    END             reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    $end            reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)
    ELSE            reduce using rule 42 (for_loop -> FOR PARENTESIS_A for_init PUNTOCOMA for_condicion PUNTOCOMA for_actualizacion PARENTESIS_B bloque_codigo .)


state 152

    (46) for_actualizacion -> ID ASIGNACION expresion .
    (22) expresion -> expresion . SUMA expresion
    (23) expresion -> expresion . RESTA expresion
    (24) expresion -> expresion . MULTIPLICACION expresion
    (25) expresion -> expresion . DIVISION expresion
    (26) expresion -> expresion . MENORQUE expresion
    (27) expresion -> expresion . MENORIGUAL expresion
    (28) expresion -> expresion . MAYORQUE expresion
    (29) expresion -> expresion . MAYORIGUAL expresion
    (30) expresion -> expresion . IGUAL expresion
    (31) expresion -> expresion . DIFERENTE expresion

    PARENTESIS_B    reduce using rule 46 (for_actualizacion -> ID ASIGNACION expresion .)
    SUMA            shift and go to state 79
    RESTA           shift and go to state 80
    MULTIPLICACION  shift and go to state 81
    DIVISION        shift and go to state 82
    MENORQUE        shift and go to state 83
    MENORIGUAL      shift and go to state 84
    MAYORQUE        shift and go to state 85
    MAYORIGUAL      shift and go to state 86
    IGUAL           shift and go to state 87
    DIFERENTE       shift and go to state 88

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LLAVE_C in state 7 resolved as shift
WARNING: shift/reduce conflict for MOVE_TO in state 7 resolved as shift
WARNING: shift/reduce conflict for WAIT_MOTION in state 7 resolved as shift
WARNING: shift/reduce conflict for START_RECORD in state 7 resolved as shift
WARNING: shift/reduce conflict for STOP_RECORD in state 7 resolved as shift
WARNING: shift/reduce conflict for LIGHT_ON in state 7 resolved as shift
WARNING: shift/reduce conflict for LIGHT_OFF in state 7 resolved as shift
WARNING: shift/reduce conflict for ALARM_ON in state 7 resolved as shift
WARNING: shift/reduce conflict for ALARM_OFF in state 7 resolved as shift
WARNING: shift/reduce conflict for SENSOR_PIR in state 7 resolved as shift
WARNING: shift/reduce conflict for STOP in state 7 resolved as shift
WARNING: shift/reduce conflict for IF in state 7 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 7 resolved as shift
WARNING: shift/reduce conflict for FOR in state 7 resolved as shift
WARNING: shift/reduce conflict for INT in state 7 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 7 resolved as shift
WARNING: shift/reduce conflict for STG in state 7 resolved as shift
WARNING: shift/reduce conflict for REAL in state 7 resolved as shift
WARNING: shift/reduce conflict for LLAVE_A in state 105 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 128 resolved as shift
